# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Approve and Merge Release Pull Request

on:
  pull_request_target:
    types:
      - opened
      - synchronize
      - reopened
    branches:
      - main

jobs:
  # --- TEMPORARY DEBUG JOB ---
  # This job will run unconditionally to dump the PR event context
  debug_pr_event:
    runs-on: ubuntu-latest
    if: github.event.pull_request.user.login == 'googlemaps-bot' && github.event.pull_request.head.ref == 'temp-build-branch'
    steps:
      - name: Dump Pull Request Event Context
        run: |
          echo "--- Debugging PR Event Context ---"
          echo "PR User Login (github.event.pull_request.user.login): ${{ github.event.pull_request.user.login }}"
          echo "PR Head Ref (github.event.pull_request.head.ref): ${{ github.event.pull_request.head.ref }}"
          echo ""
          echo "--- Full Pull Request Event JSON (for more details) ---"
          echo "${{ toJson(github.event.pull_request) }}"
          echo "--- End Debugging ---"
  
  approve-and-merge:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    if: github.event.pull_request.user.login == 'googlemaps-bot' && github.event.pull_request.head.ref == 'temp-build-branch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }} # Checkout the PR's head commit
          token: ${{ secrets.GH_MERGE_TOKEN }}

      - name: Approve PR
        run: gh pr review --approve "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GH_TOKEN: ${{ secrets.GH_APPROVER_TOKEN }}

      - name: Merge PR
        run: gh pr merge --auto --squash --delete-branch "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GH_TOKEN: ${{ secrets.GH_APPROVER_TOKEN }}
