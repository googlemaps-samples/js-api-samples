# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Release

on:
  push:  # Trigger on pushes to main
    branches:
      - main

jobs:
    release:
      runs-on: ubuntu-latest
      permissions:
        contents: write
        id-token: write
      env:
        GOOGLE_MAPS_JS_SAMPLES_KEY: "${{ secrets.GOOGLE_MAPS_JS_SAMPLES_KEY }}"
      steps:
        - name: Clear GitHub Actions Cache (Force a Miss)
          uses: actions/cache@v3
          with:
            path: ~/.gitconfig
            key: gitconfig-${{ github.run_id }}

        - name: Checkout code
          uses: actions/checkout@v3
          with:
            token: ${{ secrets.GITHUB_TOKEN }}
  
        - name: Clear Git config cache
          run: |
            git config --global --unset-all user.name || true
            git config --global --unset-all user.email || true

        - name: Set Git Identity
          run: |
            git config --global user.name 'googlemaps-bot'
            git config --global user.email 'googlemaps-bot@users.noreply.github.com'

        - uses: actions/cache@v3
          with:
            path: ~/.npm
            key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
            restore-keys: |
              ${{ runner.os }}-node
              mode: 'max'

        - uses: actions/setup-node@v3
          with:
            node-version: '22.x'

        - run: npm i
        - run: npm run build-all

        - uses: google-github-actions/auth@v1
          with:
            credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}

        - name: Install Firebase CLI
          run: npm install -g firebase-tools

        - name: Deploy to Firebase Hosting
          run: firebase deploy --only hosting

        - name: Force Checkout dist and Overwrite
          run: |
            git fetch origin main  # Ensure we have the latest main
            git checkout -B dist origin/main  # Force checkout of dist, overwriting with main
            git add dist
            git commit -m "Update dist folder"
            git push --force origin dist
