(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))i(o);new MutationObserver(o=>{for(const s of o)if(s.type==="childList")for(const n of s.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&i(n)}).observe(document,{childList:!0,subtree:!0});function e(o){const s={};return o.integrity&&(s.integrity=o.integrity),o.referrerPolicy&&(s.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?s.credentials="include":o.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(o){if(o.ep)return;o.ep=!0;const s=e(o);fetch(o.href,s)}})();function Pe(r,t,e,i){function o(s){return s instanceof e?s:new e(function(n){n(s)})}return new(e||(e=Promise))(function(s,n){function a(h){try{l(i.next(h))}catch(c){n(c)}}function d(h){try{l(i.throw(h))}catch(c){n(c)}}function l(h){h.done?s(h.value):o(h.value).then(a,d)}l((i=i.apply(r,[])).next())})}function Ie(r){return r&&r.__esModule&&Object.prototype.hasOwnProperty.call(r,"default")?r.default:r}var It,zt;function xe(){return zt||(zt=1,It=function r(t,e){if(t===e)return!0;if(t&&e&&typeof t=="object"&&typeof e=="object"){if(t.constructor!==e.constructor)return!1;var i,o,s;if(Array.isArray(t)){if(i=t.length,i!=e.length)return!1;for(o=i;o--!==0;)if(!r(t[o],e[o]))return!1;return!0}if(t.constructor===RegExp)return t.source===e.source&&t.flags===e.flags;if(t.valueOf!==Object.prototype.valueOf)return t.valueOf()===e.valueOf();if(t.toString!==Object.prototype.toString)return t.toString()===e.toString();if(s=Object.keys(t),i=s.length,i!==Object.keys(e).length)return!1;for(o=i;o--!==0;)if(!Object.prototype.hasOwnProperty.call(e,s[o]))return!1;for(o=i;o--!==0;){var n=s[o];if(!r(t[n],e[n]))return!1}return!0}return t!==t&&e!==e}),It}var Ee=xe(),Me=Ie(Ee);const Kt="__googleMapsScriptId";var tt;(function(r){r[r.INITIALIZED=0]="INITIALIZED",r[r.LOADING=1]="LOADING",r[r.SUCCESS=2]="SUCCESS",r[r.FAILURE=3]="FAILURE"})(tt||(tt={}));class H{constructor({apiKey:t,authReferrerPolicy:e,channel:i,client:o,id:s=Kt,language:n,libraries:a=[],mapIds:d,nonce:l,region:h,retries:c=3,url:u="https://maps.googleapis.com/maps/api/js",version:p}){if(this.callbacks=[],this.done=!1,this.loading=!1,this.errors=[],this.apiKey=t,this.authReferrerPolicy=e,this.channel=i,this.client=o,this.id=s||Kt,this.language=n,this.libraries=a,this.mapIds=d,this.nonce=l,this.region=h,this.retries=c,this.url=u,this.version=p,H.instance){if(!Me(this.options,H.instance.options))throw new Error(`Loader must not be called again with different options. ${JSON.stringify(this.options)} !== ${JSON.stringify(H.instance.options)}`);return H.instance}H.instance=this}get options(){return{version:this.version,apiKey:this.apiKey,channel:this.channel,client:this.client,id:this.id,libraries:this.libraries,language:this.language,region:this.region,mapIds:this.mapIds,nonce:this.nonce,url:this.url,authReferrerPolicy:this.authReferrerPolicy}}get status(){return this.errors.length?tt.FAILURE:this.done?tt.SUCCESS:this.loading?tt.LOADING:tt.INITIALIZED}get failed(){return this.done&&!this.loading&&this.errors.length>=this.retries+1}createUrl(){let t=this.url;return t+="?callback=__googleMapsCallback&loading=async",this.apiKey&&(t+=`&key=${this.apiKey}`),this.channel&&(t+=`&channel=${this.channel}`),this.client&&(t+=`&client=${this.client}`),this.libraries.length>0&&(t+=`&libraries=${this.libraries.join(",")}`),this.language&&(t+=`&language=${this.language}`),this.region&&(t+=`&region=${this.region}`),this.version&&(t+=`&v=${this.version}`),this.mapIds&&(t+=`&map_ids=${this.mapIds.join(",")}`),this.authReferrerPolicy&&(t+=`&auth_referrer_policy=${this.authReferrerPolicy}`),t}deleteScript(){const t=document.getElementById(this.id);t&&t.remove()}load(){return this.loadPromise()}loadPromise(){return new Promise((t,e)=>{this.loadCallback(i=>{i?e(i.error):t(window.google)})})}importLibrary(t){return this.execute(),google.maps.importLibrary(t)}loadCallback(t){this.callbacks.push(t),this.execute()}setScript(){var t,e;if(document.getElementById(this.id)){this.callback();return}const i={key:this.apiKey,channel:this.channel,client:this.client,libraries:this.libraries.length&&this.libraries,v:this.version,mapIds:this.mapIds,language:this.language,region:this.region,authReferrerPolicy:this.authReferrerPolicy};Object.keys(i).forEach(s=>!i[s]&&delete i[s]),!((e=(t=window==null?void 0:window.google)===null||t===void 0?void 0:t.maps)===null||e===void 0)&&e.importLibrary||(s=>{let n,a,d,l="The Google Maps JavaScript API",h="google",c="importLibrary",u="__ib__",p=document,g=window;g=g[h]||(g[h]={});const y=g.maps||(g.maps={}),v=new Set,m=new URLSearchParams,C=()=>n||(n=new Promise((f,P)=>Pe(this,void 0,void 0,function*(){var x;yield a=p.createElement("script"),a.id=this.id,m.set("libraries",[...v]+"");for(d in s)m.set(d.replace(/[A-Z]/g,w=>"_"+w[0].toLowerCase()),s[d]);m.set("callback",h+".maps."+u),a.src=this.url+"?"+m,y[u]=f,a.onerror=()=>n=P(Error(l+" could not load.")),a.nonce=this.nonce||((x=p.querySelector("script[nonce]"))===null||x===void 0?void 0:x.nonce)||"",p.head.append(a)})));y[c]?console.warn(l+" only loads once. Ignoring:",s):y[c]=(f,...P)=>v.add(f)&&C().then(()=>y[c](f,...P))})(i);const o=this.libraries.map(s=>this.importLibrary(s));o.length||o.push(this.importLibrary("core")),Promise.all(o).then(()=>this.callback(),s=>{const n=new ErrorEvent("error",{error:s});this.loadErrorCallback(n)})}reset(){this.deleteScript(),this.done=!1,this.loading=!1,this.errors=[],this.onerrorEvent=null}resetIfRetryingFailed(){this.failed&&this.reset()}loadErrorCallback(t){if(this.errors.push(t),this.errors.length<=this.retries){const e=this.errors.length*Math.pow(2,this.errors.length);console.error(`Failed to load Google Maps script, retrying in ${e} ms.`),setTimeout(()=>{this.deleteScript(),this.setScript()},e)}else this.onerrorEvent=t,this.callback()}callback(){this.done=!0,this.loading=!1,this.callbacks.forEach(t=>{t(this.onerrorEvent)}),this.callbacks=[]}execute(){if(this.resetIfRetryingFailed(),!this.loading)if(this.done)this.callback();else{if(window.google&&window.google.maps&&window.google.maps.version){console.warn("Google Maps already loaded outside @googlemaps/js-api-loader. This may result in undesirable behavior as options and script parameters may not match."),this.callback();return}this.loading=!0,this.setScript()}}}function M(){return M=Object.assign?Object.assign.bind():function(r){for(var t=1;t<arguments.length;t++){var e=arguments[t];for(var i in e)({}).hasOwnProperty.call(e,i)&&(r[i]=e[i])}return r},M.apply(null,arguments)}var I;(function(r){r.Commit="commit",r.Provisional="provisional",r.Finish="finish"})(I||(I={}));const L={SELECTED:"selected",MID_POINT:"midPoint",SELECTION_POINT_FEATURE_ID:"selectionPointFeatureId",SELECTION_POINT:"selectionPoint"},N="currentlyDrawing",R="edited",et="closingPoint",Ft="snappingPoint",Ot="coordinatePoint",Se="coordinatePointFeatureId",dt="coordinatePointIds",U=10;function xt(r){return!!(r&&typeof r=="object"&&r!==null&&!Array.isArray(r))}function Xt(r){return!!(r&&typeof r=="object"&&"properties"in r&&typeof r.properties=="object"&&r.properties!==null&&"mode"in r.properties)}function Yt(r){return!!function(t){return typeof t=="number"&&!isNaN(new Date(t).valueOf())}(r)}const be="Feature mode property does not match the mode being added to";var it;(function(r){r.Drawing="drawing",r.Select="select",r.Static="static",r.Render="render"})(it||(it={}));const we={rightClick:!0,contextMenu:!1,leftClick:!0,onDragStart:!0,onDrag:!0,onDragEnd:!0};class z{get state(){return this._state}set state(t){throw new Error("Please use the modes lifecycle methods")}get styles(){return this._styles}set styles(t){if(typeof t!="object")throw new Error("Styling must be an object");this.onStyleChange&&this.onStyleChange([],"styling"),this._styles=t}registerBehaviors(t){}constructor(t,e=!1){this._state="unregistered",this._styles={},this.pointerEvents=we,this.behaviors=[],this.validate=void 0,this.pointerDistance=40,this.coordinatePrecision=void 0,this.onStyleChange=void 0,this.store=void 0,this.projection="web-mercator",this.setDoubleClickToZoom=void 0,this.unproject=void 0,this.project=void 0,this.setCursor=void 0,this.type=it.Drawing,this.mode="base",e||this.updateOptions(t)}updateOptions(t){t!=null&&t.styles&&(this.styles=M({},this._styles,t.styles)),t!=null&&t.pointerDistance&&(this.pointerDistance=t.pointerDistance),t!=null&&t.validation&&(this.validate=t&&t.validation),t!=null&&t.projection&&(this.projection=t.projection),(t==null?void 0:t.pointerEvents)!==void 0&&(this.pointerEvents=t.pointerEvents)}allowPointerEvent(t,e){return typeof t=="boolean"?t:typeof t!="function"||t(e)}setDrawing(){if(this._state!=="started")throw new Error("Mode must be unregistered or stopped to start");this._state="drawing"}setStarted(){if(this._state!=="stopped"&&this._state!=="registered"&&this._state!=="drawing"&&this._state!=="selecting")throw new Error("Mode must be unregistered or stopped to start");this._state="started",this.setDoubleClickToZoom(!1)}setStopped(){if(this._state!=="started")throw new Error("Mode must be started to be stopped");this._state="stopped",this.setDoubleClickToZoom(!0)}register(t){if(this._state!=="unregistered")throw new Error("Can not register unless mode is unregistered");this._state="registered",this.store=t.store,this.store.registerOnChange(t.onChange),this.setDoubleClickToZoom=t.setDoubleClickToZoom,this.project=t.project,this.unproject=t.unproject,this.onSelect=t.onSelect,this.onDeselect=t.onDeselect,this.setCursor=t.setCursor,this.onStyleChange=t.onChange,this.onFinish=t.onFinish,this.coordinatePrecision=t.coordinatePrecision,this.registerBehaviors({mode:t.mode,store:this.store,project:this.project,unproject:this.unproject,pointerDistance:this.pointerDistance,coordinatePrecision:t.coordinatePrecision,projection:this.projection})}validateFeature(t){return this.performFeatureValidation(t)}afterFeatureAdded(t){}performFeatureValidation(t){if(this._state==="unregistered")throw new Error("Mode must be registered");const e=function(i,o){let s;if(xt(i))if(i.id==null)s="Feature has no id";else if(typeof i.id!="string"&&typeof i.id!="number")s="Feature must be string or number as per GeoJSON spec";else if(o(i.id))if(xt(i.geometry))if(xt(i.properties))if(typeof i.geometry.type=="string"&&["Polygon","LineString","Point"].includes(i.geometry.type))if(Array.isArray(i.geometry.coordinates)){if(!i.properties.mode||typeof i.properties.mode!="string")return{valid:!1,reason:"Feature does not have a valid mode property"}}else s="Feature coordinates is not an array";else s="Feature is not Point, LineString or Polygon";else s="Feature has no properties";else s="Feature has no geometry";else s="Feature must match the id strategy (default is UUID4)";else s="Feature is not object";return s?{valid:!1,reason:s}:{valid:!0}}(t,this.store.idStrategy.isValidId);if(this.validate){const i=this.validate(t,{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:I.Provisional});return{valid:e.valid&&i.valid,reason:i.reason}}return{valid:e.valid,reason:e.reason}}validateModeFeature(t,e){const i=this.performFeatureValidation(t);return i.valid?t.properties.mode!==this.mode?{valid:!1,reason:be}:e(t):{valid:!1,reason:i.reason}}onFinish(t,e){}onDeselect(t){}onSelect(t){}onKeyDown(t){}onKeyUp(t){}onMouseMove(t){}onClick(t){}onDragStart(t,e){}onDrag(t,e){}onDragEnd(t,e){}getHexColorStylingValue(t,e,i){return this.getStylingValue(t,e,i)}getNumericStylingValue(t,e,i){return this.getStylingValue(t,e,i)}getStylingValue(t,e,i){return t===void 0?e:typeof t=="function"?t(i):t}}class Fe extends z{constructor(...t){super(...t),this.type=it.Select}}function T(r,t){const e=l=>l*Math.PI/180,i=e(r[1]),o=e(r[0]),s=e(t[1]),n=s-i,a=e(t[0])-o,d=Math.sin(n/2)*Math.sin(n/2)+Math.cos(i)*Math.cos(s)*Math.sin(a/2)*Math.sin(a/2);return 2*Math.atan2(Math.sqrt(d),Math.sqrt(1-d))*6371e3/1e3}const ce=63710088e-1;function _(r){return r%360*Math.PI/180}function ue(r){return r/6371.0088}function V(r){return r%(2*Math.PI)*180/Math.PI}function b(r,t=9){const e=Math.pow(10,t);return Math.round(r*e)/e}const $t=57.29577951308232,Ht=.017453292519943295,vt=6378137,S=(r,t)=>({x:r===0?0:r*Ht*vt,y:t===0?0:Math.log(Math.tan(Math.PI/4+t*Ht/2))*vt}),ot=(r,t)=>({lng:r===0?0:$t*(r/vt),lat:t===0?0:(2*Math.atan(Math.exp(t/vt))-Math.PI/2)*$t});function _e(r,t,e){const i=_(r[0]),o=_(r[1]),s=_(e),n=ue(t),a=Math.asin(Math.sin(o)*Math.cos(n)+Math.cos(o)*Math.sin(n)*Math.cos(s));return[V(i+Math.atan2(Math.sin(s)*Math.sin(n)*Math.cos(o),Math.cos(n)-Math.sin(o)*Math.sin(a))),V(a)]}function qt(r){const{center:t,radiusKilometers:e,coordinatePrecision:i}=r,o=r.steps?r.steps:64,s=[];for(let n=0;n<o;n++){const a=_e(t,e,-360*n/o);s.push([b(a[0],i),b(a[1],i)])}return s.push(s[0]),{type:"Feature",geometry:{type:"Polygon",coordinates:[s]},properties:{}}}function pe(r){let t;if(r.geometry.type==="Polygon")t=r.geometry.coordinates;else{if(r.geometry.type!=="LineString")throw new Error("Self intersects only accepts Polygons and LineStrings");t=[r.geometry.coordinates]}const e=[];for(let s=0;s<t.length;s++)for(let n=0;n<t[s].length-1;n++)for(let a=0;a<t.length;a++)for(let d=0;d<t[a].length-1;d++)o(s,n,a,d);return e.length>0;function i(s){return s<0||s>1}function o(s,n,a,d){const l=t[s][n],h=t[s][n+1],c=t[a][d],u=t[a][d+1],p=function(v,m,C,f){if(ct(v,C)||ct(v,f)||ct(m,C)||ct(f,C))return null;const P=v[0],x=v[1],w=m[0],F=m[1],O=C[0],B=C[1],D=f[0],W=f[1],K=(P-w)*(B-W)-(x-F)*(O-D);return K===0?null:[((P*F-x*w)*(O-D)-(P-w)*(O*W-B*D))/K,((P*F-x*w)*(B-W)-(x-F)*(O*W-B*D))/K]}(l,h,c,u);if(p===null)return;let g,y;g=h[0]!==l[0]?(p[0]-l[0])/(h[0]-l[0]):(p[1]-l[1])/(h[1]-l[1]),y=u[0]!==c[0]?(p[0]-c[0])/(u[0]-c[0]):(p[1]-c[1])/(u[1]-c[1]),i(g)||i(y)||(p.toString(),e.push(p))}}function ct(r,t){return r[0]===t[0]&&r[1]===t[1]}function Pt(r,t){return Jt(r[0])<=t&&Jt(r[1])<=t}function Bt(r){return r.length===2&&typeof r[0]=="number"&&typeof r[1]=="number"&&r[0]!==1/0&&r[1]!==1/0&&(e=r[0])>=-180&&e<=180&&(t=r[1])>=-90&&t<=90;var t,e}function Jt(r){let t=1,e=0;for(;Math.round(r*t)/t!==r;)t*=10,e++;return e}const De="Feature has holes",ke="Feature has less than 4 coordinates",Oe="Feature has invalid coordinates",Be="Feature coordinates are not closed";function jt(r,t){if(r.geometry.type!=="Polygon")return{valid:!1,reason:"Feature is not a Polygon"};if(r.geometry.coordinates.length!==1)return{valid:!1,reason:De};if(r.geometry.coordinates[0].length<4)return{valid:!1,reason:ke};for(let o=0;o<r.geometry.coordinates[0].length;o++){if(!Bt(r.geometry.coordinates[0][o]))return{valid:!1,reason:Oe};if(!Pt(r.geometry.coordinates[0][o],t))return{valid:!1,reason:"Feature has coordinates with excessive precision"}}return(e=r.geometry.coordinates[0][0])[0]!==(i=r.geometry.coordinates[0][r.geometry.coordinates[0].length-1])[0]||e[1]!==i[1]?{valid:!1,reason:Be}:{valid:!0};var e,i}function ge(r,t){const e=jt(r,t);return e.valid?pe(r)?{valid:!1,reason:"Feature intersects itself"}:{valid:!0}:e}const je={cancel:"Escape",finish:"Enter"},Le={start:"crosshair"};class We extends z{constructor(t){super(t,!0),this.mode="circle",this.center=void 0,this.clickCount=0,this.currentCircleId=void 0,this.keyEvents=je,this.cursors=Le,this.startingRadiusKilometers=1e-5,this.cursorMovedAfterInitialCursorDown=!1,this.updateOptions(t)}updateOptions(t){super.updateOptions(t),t!=null&&t.cursors&&(this.cursors=M({},this.cursors,t.cursors)),(t==null?void 0:t.keyEvents)===null?this.keyEvents={cancel:null,finish:null}:t!=null&&t.keyEvents&&(this.keyEvents=M({},this.keyEvents,t.keyEvents)),t!=null&&t.startingRadiusKilometers&&(this.startingRadiusKilometers=t.startingRadiusKilometers)}close(){if(this.currentCircleId===void 0)return;this.store.updateProperty([{id:this.currentCircleId,property:N,value:void 0}]);const t=this.currentCircleId;if(this.validate&&t){const e=this.store.getGeometryCopy(t);if(!this.validate({type:"Feature",id:t,geometry:e,properties:{}},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:I.Finish}).valid)return}this.cursorMovedAfterInitialCursorDown=!1,this.center=void 0,this.currentCircleId=void 0,this.clickCount=0,this.state==="drawing"&&this.setStarted(),this.onFinish(t,{mode:this.mode,action:"draw"})}start(){this.setStarted(),this.setCursor(this.cursors.start)}stop(){this.cleanUp(),this.setStopped(),this.setCursor("unset")}onClick(t){if(t.button==="right"&&this.allowPointerEvent(this.pointerEvents.rightClick,t)||t.button==="left"&&this.allowPointerEvent(this.pointerEvents.leftClick,t)||t.isContextMenu&&this.allowPointerEvent(this.pointerEvents.contextMenu,t))if(this.clickCount===0){this.center=[t.lng,t.lat];const e=qt({center:this.center,radiusKilometers:this.startingRadiusKilometers,coordinatePrecision:this.coordinatePrecision}),[i]=this.store.create([{geometry:e.geometry,properties:{mode:this.mode,radiusKilometers:this.startingRadiusKilometers,[N]:!0}}]);this.currentCircleId=i,this.clickCount++,this.cursorMovedAfterInitialCursorDown=!1,this.setDrawing()}else this.clickCount===1&&this.center&&this.currentCircleId!==void 0&&this.cursorMovedAfterInitialCursorDown&&this.updateCircle(t),this.close()}onMouseMove(t){this.cursorMovedAfterInitialCursorDown=!0,this.updateCircle(t)}onKeyDown(){}onKeyUp(t){t.key===this.keyEvents.cancel?this.cleanUp():t.key===this.keyEvents.finish&&this.close()}onDragStart(){}onDrag(){}onDragEnd(){}cleanUp(){const t=this.currentCircleId;this.center=void 0,this.currentCircleId=void 0,this.clickCount=0,this.state==="drawing"&&this.setStarted();try{t!==void 0&&this.store.delete([t])}catch{}}styleFeature(t){const e=M({},{polygonFillColor:"#3f97e0",polygonOutlineColor:"#3f97e0",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:"#3f97e0",pointOutlineColor:"#ffffff",pointOutlineWidth:0,pointWidth:6,lineStringColor:"#3f97e0",lineStringWidth:4,zIndex:0});return t.type==="Feature"&&t.geometry.type==="Polygon"&&t.properties.mode===this.mode&&(e.polygonFillColor=this.getHexColorStylingValue(this.styles.fillColor,e.polygonFillColor,t),e.polygonOutlineColor=this.getHexColorStylingValue(this.styles.outlineColor,e.polygonOutlineColor,t),e.polygonOutlineWidth=this.getNumericStylingValue(this.styles.outlineWidth,e.polygonOutlineWidth,t),e.polygonFillOpacity=this.getNumericStylingValue(this.styles.fillOpacity,e.polygonFillOpacity,t),e.zIndex=U),e}validateFeature(t){return this.validateModeFeature(t,e=>ge(e,this.coordinatePrecision))}updateCircle(t){if(this.clickCount===1&&this.center&&this.currentCircleId){const e=T(this.center,[t.lng,t.lat]);let i;if(this.projection==="web-mercator"){const o=function(s,n){const a=1e3*T(s,n);if(a===0)return 1;const{x:d,y:l}=S(s[0],s[1]),{x:h,y:c}=S(n[0],n[1]);return Math.sqrt(Math.pow(h-d,2)+Math.pow(c-l,2))/a}(this.center,[t.lng,t.lat]);i=function(s){const{center:n,radiusKilometers:a,coordinatePrecision:d}=s,l=s.steps?s.steps:64,h=1e3*a,[c,u]=n,{x:p,y:g}=S(c,u),y=[];for(let v=0;v<l;v++){const m=360*v/l*Math.PI/180,C=h*Math.cos(m),f=h*Math.sin(m),[P,x]=[p+C,g+f],{lng:w,lat:F}=ot(P,x);y.push([b(w,d),b(F,d)])}return y.push(y[0]),{type:"Feature",geometry:{type:"Polygon",coordinates:[y]},properties:{}}}({center:this.center,radiusKilometers:e*o,coordinatePrecision:this.coordinatePrecision})}else{if(this.projection!=="globe")throw new Error("Invalid projection");i=qt({center:this.center,radiusKilometers:e,coordinatePrecision:this.coordinatePrecision})}if(this.validate&&!this.validate({type:"Feature",id:this.currentCircleId,geometry:i.geometry,properties:{radiusKilometers:e}},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:I.Provisional}).valid)return;this.store.updateGeometry([{id:this.currentCircleId,geometry:i.geometry}]),this.store.updateProperty([{id:this.currentCircleId,property:"radiusKilometers",value:e}])}}}const G=(r,t)=>{const{x:e,y:i}=r,{x:o,y:s}=t,n=o-e,a=s-i;return Math.sqrt(a*a+n*n)};function Lt(r){if(!function(e){const i=e.coordinates[0];let o=0;for(let s=0;s<i.length-1;s++){const[n,a]=i[s],[d,l]=i[s+1];o+=(d-n)*(l+a)}return o<0}(r))return{type:"Polygon",coordinates:[r.coordinates[0].reverse()]}}const Ne={cancel:"Escape",finish:"Enter"},Ge={start:"crosshair",close:"pointer"};class Te extends z{constructor(t){super(t,!0),this.mode="freehand",this.startingClick=!1,this.currentId=void 0,this.closingPointId=void 0,this.minDistance=20,this.keyEvents=Ne,this.cursors=Ge,this.preventPointsNearClose=!0,this.autoClose=!1,this.autoCloseTimeout=500,this.hasLeftStartingPoint=!1,this.preventNewFeature=!1,this.updateOptions(t)}updateOptions(t){super.updateOptions(t),t!=null&&t.minDistance&&(this.minDistance=t.minDistance),(t==null?void 0:t.preventPointsNearClose)!==void 0&&(this.preventPointsNearClose=t.preventPointsNearClose),(t==null?void 0:t.autoClose)!==void 0&&(this.autoClose=t.autoClose),t!=null&&t.autoCloseTimeout&&(this.autoCloseTimeout=t.autoCloseTimeout),(t==null?void 0:t.keyEvents)===null?this.keyEvents={cancel:null,finish:null}:t!=null&&t.keyEvents&&(this.keyEvents=M({},this.keyEvents,t.keyEvents)),t!=null&&t.cursors&&(this.cursors=M({},this.cursors,t.cursors))}close(){if(this.currentId===void 0)return;if(this.currentId){const e=Lt(this.store.getGeometryCopy(this.currentId));e&&this.store.updateGeometry([{id:this.currentId,geometry:e}]),this.store.updateProperty([{id:this.currentId,property:N,value:void 0}])}const t=this.currentId;if(this.validate&&t){const e=this.store.getGeometryCopy(t);if(!this.validate({type:"Feature",id:t,geometry:e,properties:{}},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:I.Finish}).valid)return}this.closingPointId&&this.store.delete([this.closingPointId]),this.startingClick=!1,this.currentId=void 0,this.closingPointId=void 0,this.hasLeftStartingPoint=!1,this.state==="drawing"&&this.setStarted(),this.onFinish(t,{mode:this.mode,action:"draw"})}start(){this.setStarted(),this.setCursor(this.cursors.start)}stop(){this.cleanUp(),this.setStopped(),this.setCursor("unset")}onMouseMove(t){if(this.currentId===void 0||this.startingClick===!1)return;const e=this.store.getGeometryCopy(this.currentId),i=e.coordinates[0].length-2,[o,s]=e.coordinates[0][i],{x:n,y:a}=this.project(o,s),d=G({x:n,y:a},{x:t.containerX,y:t.containerY}),[l,h]=e.coordinates[0][0],{x:c,y:u}=this.project(l,h);if(G({x:c,y:u},{x:t.containerX,y:t.containerY})<this.pointerDistance){if(this.autoClose&&this.hasLeftStartingPoint&&(this.preventNewFeature=!0,setTimeout(()=>{this.preventNewFeature=!1},this.autoCloseTimeout),this.close()),this.setCursor(this.cursors.close),this.preventPointsNearClose)return}else this.hasLeftStartingPoint=!0,this.setCursor(this.cursors.start);if(d<this.minDistance)return;e.coordinates[0].pop();const p={type:"Polygon",coordinates:[[...e.coordinates[0],[t.lng,t.lat],e.coordinates[0][0]]]};this.validate&&!this.validate({type:"Feature",id:this.currentId,geometry:p,properties:{}},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:I.Provisional}).valid||this.store.updateGeometry([{id:this.currentId,geometry:p}])}onClick(t){if(t.button==="right"&&this.allowPointerEvent(this.pointerEvents.rightClick,t)||t.button==="left"&&this.allowPointerEvent(this.pointerEvents.leftClick,t)||t.isContextMenu&&this.allowPointerEvent(this.pointerEvents.contextMenu,t)){if(this.preventNewFeature)return;if(this.startingClick===!1){const[e,i]=this.store.create([{geometry:{type:"Polygon",coordinates:[[[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat]]]},properties:{mode:this.mode,[N]:!0}},{geometry:{type:"Point",coordinates:[t.lng,t.lat]},properties:{mode:this.mode,[et]:!0}}]);return this.currentId=e,this.closingPointId=i,this.startingClick=!0,void this.setDrawing()}this.close()}}onKeyDown(){}onKeyUp(t){t.key===this.keyEvents.cancel?this.cleanUp():t.key===this.keyEvents.finish&&this.startingClick===!0&&this.close()}onDragStart(){}onDrag(){}onDragEnd(){}cleanUp(){const t=this.currentId,e=this.closingPointId;this.closingPointId=void 0,this.currentId=void 0,this.startingClick=!1,this.state==="drawing"&&this.setStarted();try{t!==void 0&&this.store.delete([t]),e!==void 0&&this.store.delete([e])}catch{}}styleFeature(t){const e=M({},{polygonFillColor:"#3f97e0",polygonOutlineColor:"#3f97e0",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:"#3f97e0",pointOutlineColor:"#ffffff",pointOutlineWidth:0,pointWidth:6,lineStringColor:"#3f97e0",lineStringWidth:4,zIndex:0});return t.type==="Feature"&&t.geometry.type==="Polygon"&&t.properties.mode===this.mode?(e.polygonFillColor=this.getHexColorStylingValue(this.styles.fillColor,e.polygonFillColor,t),e.polygonOutlineColor=this.getHexColorStylingValue(this.styles.outlineColor,e.polygonOutlineColor,t),e.polygonOutlineWidth=this.getNumericStylingValue(this.styles.outlineWidth,e.polygonOutlineWidth,t),e.polygonFillOpacity=this.getNumericStylingValue(this.styles.fillOpacity,e.polygonFillOpacity,t),e.zIndex=U,e):(t.type==="Feature"&&t.geometry.type==="Point"&&t.properties.mode===this.mode&&(e.pointWidth=this.getNumericStylingValue(this.styles.closingPointWidth,e.pointWidth,t),e.pointColor=this.getHexColorStylingValue(this.styles.closingPointColor,e.pointColor,t),e.pointOutlineColor=this.getHexColorStylingValue(this.styles.closingPointOutlineColor,e.pointOutlineColor,t),e.pointOutlineWidth=this.getNumericStylingValue(this.styles.closingPointOutlineWidth,2,t),e.zIndex=50),e)}validateFeature(t){return this.validateModeFeature(t,e=>jt(e,this.coordinatePrecision))}}class k{constructor({store:t,mode:e,project:i,unproject:o,pointerDistance:s,coordinatePrecision:n,projection:a}){this.store=void 0,this.mode=void 0,this.project=void 0,this.unproject=void 0,this.pointerDistance=void 0,this.coordinatePrecision=void 0,this.projection=void 0,this.store=t,this.mode=e,this.project=i,this.unproject=o,this.pointerDistance=s,this.coordinatePrecision=n,this.projection=a}}function ye({unproject:r,point:t,pointerDistance:e}){const i=e/2,{x:o,y:s}=t;return{type:"Feature",properties:{},geometry:{type:"Polygon",coordinates:[[r(o-i,s-i),r(o+i,s-i),r(o+i,s+i),r(o-i,s+i),r(o-i,s-i)].map(n=>[n.lng,n.lat])]}}}class lt extends k{constructor(t){super(t)}create(t){const{containerX:e,containerY:i}=t;return ye({unproject:this.unproject,point:{x:e,y:i},pointerDistance:this.pointerDistance})}}class ht extends k{constructor(t){super(t)}measure(t,e){const{x:i,y:o}=this.project(e[0],e[1]);return G({x:i,y:o},{x:t.containerX,y:t.containerY})}}class Ct extends k{constructor(t,e,i){super(t),this.config=void 0,this.pixelDistance=void 0,this.clickBoundingBox=void 0,this.getSnappableCoordinateFirstClick=o=>this.getSnappable(o,s=>!!(s.properties&&s.properties.mode===this.mode)).coordinate,this.getSnappableCoordinate=(o,s)=>this.getSnappable(o,n=>!!(n.properties&&n.properties.mode===this.mode&&n.id!==s)).coordinate,this.config=t,this.pixelDistance=e,this.clickBoundingBox=i}getSnappable(t,e){const i=this.clickBoundingBox.create(t),o=this.store.search(i,e),s={featureId:void 0,featureCoordinateIndex:void 0,coordinate:void 0,minDist:1/0};return o.forEach(n=>{let a;if(n.geometry.type==="Polygon")a=n.geometry.coordinates[0];else{if(n.geometry.type!=="LineString")return;a=n.geometry.coordinates}a.forEach((d,l)=>{const h=this.pixelDistance.measure(t,d);h<s.minDist&&h<this.pointerDistance&&(s.coordinate=d,s.minDist=h,s.featureId=n.id,s.featureCoordinateIndex=l)})}),s}}function Zt(r,t,e){const i=_(r[0]),o=_(r[1]),s=_(e),n=ue(t),a=Math.asin(Math.sin(o)*Math.cos(n)+Math.cos(o)*Math.sin(n)*Math.cos(s));return[V(i+Math.atan2(Math.sin(s)*Math.sin(n)*Math.cos(o),Math.cos(n)-Math.sin(o)*Math.sin(a))),V(a)]}function Qt(r,t){const e=_(r[0]),i=_(t[0]),o=_(r[1]),s=_(t[1]),n=Math.sin(i-e)*Math.cos(s),a=Math.cos(o)*Math.sin(s)-Math.sin(o)*Math.cos(s)*Math.cos(i-e);return V(Math.atan2(n,a))}function Ae({x:r,y:t},{x:e,y:i}){const o=e-r,s=i-t;if(o===0&&s===0)return 0;let n=Math.atan2(s,o);return n*=180/Math.PI,n>180?n-=360:n<-180&&(n+=360),n}function Re(r,t,e){const i=[],o=r.length;let s,n,a,d=0;for(let h=0;h<r.length&&!(t>=d&&h===r.length-1);h++){if(d>t&&i.length===0){if(s=t-d,!s)return i.push(r[h]),i;n=Qt(r[h],r[h-1])-180,a=Zt(r[h],s,n),i.push(a)}if(d>=e)return s=e-d,s?(n=Qt(r[h],r[h-1])-180,a=Zt(r[h],s,n),i.push(a),i):(i.push(r[h]),i);if(d>=t&&i.push(r[h]),h===r.length-1)return i;d+=T(r[h],r[h+1])}if(d<t&&r.length===o)throw new Error("Start position is beyond line");const l=r[r.length-1];return[l,l]}function ut(r){return r*(Math.PI/180)}function te(r){return r*(180/Math.PI)}class Ue extends k{constructor(t){super(t),this.config=void 0,this.config=t}generateInsertionCoordinates(t,e,i){const o=[t,e];let s=0;for(let l=0;l<o.length-1;l++)s+=T(o[0],o[1]);if(s<=i)return o;let n=s/i-1;Number.isInteger(n)||(n=Math.floor(n)+1);const a=[];for(let l=0;l<n;l++){const h=Re(o,i*l,i*(l+1));a.push(h)}const d=[];for(let l=0;l<a.length;l++)d.push(a[l][1]);return this.limitCoordinates(d)}generateInsertionGeodesicCoordinates(t,e,i){const o=T(t,e),s=function(n,a,d){const l=[],h=ut(n[1]),c=ut(n[0]),u=ut(a[1]),p=ut(a[0]);d+=1;const g=2*Math.asin(Math.sqrt(Math.sin((u-h)/2)**2+Math.cos(h)*Math.cos(u)*Math.sin((p-c)/2)**2));if(g===0||isNaN(g))return l;for(let y=0;y<=d;y++){const v=y/d,m=Math.sin((1-v)*g)/Math.sin(g),C=Math.sin(v*g)/Math.sin(g),f=m*Math.cos(h)*Math.cos(c)+C*Math.cos(u)*Math.cos(p),P=m*Math.cos(h)*Math.sin(c)+C*Math.cos(u)*Math.sin(p),x=m*Math.sin(h)+C*Math.sin(u);if(isNaN(f)||isNaN(P)||isNaN(x))continue;const w=Math.atan2(x,Math.sqrt(f**2+P**2)),F=Math.atan2(P,f);isNaN(w)||isNaN(F)||l.push([te(F),te(w)])}return l.slice(1,-1)}(t,e,Math.floor(o/i));return this.limitCoordinates(s)}limitCoordinates(t){return t.map(e=>[b(e[0],this.config.coordinatePrecision),b(e[1],this.config.coordinatePrecision)])}}function mt(r,t){return r[0]===t[0]&&r[1]===t[1]}function Ve(r,t){if(r.geometry.type!=="LineString")return{valid:!1,reason:"Feature is not a LineString"};if(r.geometry.coordinates.length<2)return{valid:!1,reason:"Feature has less than 2 coordinates"};for(let e=0;e<r.geometry.coordinates.length;e++){if(!Bt(r.geometry.coordinates[e]))return{valid:!1,reason:"Feature has invalid coordinates"};if(!Pt(r.geometry.coordinates[e],t))return{valid:!1,reason:"Feature has coordinates with excessive precision"}}return{valid:!0}}function ee(r){return Math.sqrt(Math.pow(r[0],2)+Math.pow(r[1],2)+Math.pow(r[2],2))}function X(r,t){const e=function(i,o){const[s,n,a]=i,[d,l,h]=o;return s*d+n*l+a*h}(r,t)/(ee(r)*ee(t));return Math.acos(Math.min(Math.max(e,-1),1))}function Et(r){const t=_(r[1]),e=_(r[0]);return[Math.cos(t)*Math.cos(e),Math.cos(t)*Math.sin(e),Math.sin(t)]}function Y(r){const[t,e,i]=r,o=V(Math.asin(i));return[V(Math.atan2(e,t)),o]}function ze(r,t,e){const i=Et(r),o=Et(t),s=Et(e),[n,a,d]=s,[l,h,c]=function(W,K){const[Gt,Tt,At]=W,[Rt,Ut,Vt]=K;return[Tt*Vt-At*Ut,At*Rt-Gt*Vt,Gt*Ut-Tt*Rt]}(i,o),u=h*d-c*a,p=c*n-l*d,g=l*a-h*n,y=g*h-p*c,v=u*c-g*l,m=p*l-u*h,C=1/Math.sqrt(Math.pow(y,2)+Math.pow(v,2)+Math.pow(m,2)),f=[y*C,v*C,m*C],P=[-1*y*C,-1*v*C,-1*m*C],x=X(i,o),w=X(i,f),F=X(o,f),O=X(i,P),B=X(o,P);let D;return D=w<O&&w<B||F<O&&F<B?f:P,X(i,D)>x||X(o,D)>x?T(Y(D),Y(i))<=T(Y(D),Y(o))?[Y(i),!0,!1]:[Y(o),!1,!0]:[Y(D),!1,!1]}function Ke(r,t,e){const i=t.x-r.x,o=t.y-r.y,s=Math.max(0,Math.min(1,((e.x-r.x)*i+(e.y-r.y)*o)/(i*i+o*o)));return{x:r.x+s*i,y:r.y+s*o}}class Wt extends k{constructor(t,e,i){super(t),this.config=void 0,this.pixelDistance=void 0,this.clickBoundingBox=void 0,this.getSnappableCoordinateFirstClick=o=>{const s=this.getSnappable(o,n=>!!(n.properties&&n.properties.mode===this.mode));return s.coordinate?[b(s.coordinate[0],this.config.coordinatePrecision),b(s.coordinate[1],this.config.coordinatePrecision)]:void 0},this.getSnappableCoordinate=(o,s)=>{const n=this.getSnappable(o,a=>!!(a.properties&&a.properties.mode===this.mode&&a.id!==s));return n.coordinate?[b(n.coordinate[0],this.config.coordinatePrecision),b(n.coordinate[1],this.config.coordinatePrecision)]:void 0},this.config=t,this.pixelDistance=e,this.clickBoundingBox=i}getSnappable(t,e){const i=this.clickBoundingBox.create(t),o=this.store.search(i,e),s={featureId:void 0,featureCoordinateIndex:void 0,coordinate:void 0,minDistance:1/0};return o.forEach(n=>{let a;if(n.geometry.type==="Polygon")a=n.geometry.coordinates[0];else{if(n.geometry.type!=="LineString")return;a=n.geometry.coordinates}const d=[];for(let u=0;u<a.length-1;u++)d.push([a[u],a[u+1]]);let l;const h=[t.lng,t.lat];if(this.config.projection==="web-mercator"?l=function(u,p){let g=[1/0,1/0],y=1/0,v=0;for(let m of p){const C=m[0],f=m[1];let P,x=1/0;const w=S(C[0],C[1]),F=S(f[0],f[1]),O=S(u[0],u[1]);if(C[0]===u[0]&&C[1]===u[1])P=C;else if(f[0]===u[0]&&f[1]===u[1])P=f;else{const{x:B,y:D}=Ke(w,F,O),{lng:W,lat:K}=ot(B,D);P=[W,K]}P&&(x=G(O,S(P[0],P[1])),x<y&&(g=P,y=x,v=p.indexOf(m)))}return y===1/0?void 0:{coordinate:g,lineIndex:v,distance:y}}(h,d):this.config.projection==="globe"&&(l=function(u,p){let g=[1/0,1/0],y=1/0,v=0;for(let m of p){const C=m[0],f=m[1];let P,x=1/0;C[0]===u[0]&&C[1]===u[1]?P=C:f[0]===u[0]&&f[1]===u[1]?P=f:[P]=ze(C,f,u),P&&(x=T(u,P),x<y&&(g=P,y=x,v=p.indexOf(m)))}return y===1/0?void 0:{coordinate:g,distance:y,lineIndex:v}}(h,d)),!l)return;const c=this.pixelDistance.measure(t,l.coordinate);c<s.minDistance&&c<this.pointerDistance&&(s.featureId=n.id,s.coordinate=[b(l.coordinate[0],this.config.coordinatePrecision),b(l.coordinate[1],this.config.coordinatePrecision)],s.featureCoordinateIndex=l.lineIndex,s.minDistance=c)}),s}}const Xe={cancel:"Escape",finish:"Enter"},Ye={start:"crosshair",close:"pointer",dragStart:"grabbing",dragEnd:"crosshair"};class $e extends z{constructor(t){super(t,!0),this.mode="linestring",this.currentCoordinate=0,this.currentId=void 0,this.closingPointId=void 0,this.keyEvents=Xe,this.snapping=void 0,this.cursors=Ye,this.mouseMove=!1,this.insertCoordinates=void 0,this.lastCommitedCoordinates=void 0,this.snappedPointId=void 0,this.editable=!1,this.editedFeatureId=void 0,this.editedFeatureCoordinateIndex=void 0,this.editedSnapType=void 0,this.editedInsertIndex=void 0,this.editedPointId=void 0,this.coordinateSnapping=void 0,this.insertPoint=void 0,this.lineSnapping=void 0,this.pixelDistance=void 0,this.clickBoundingBox=void 0,this.updateOptions(t)}updateOptions(t){super.updateOptions(t),t!=null&&t.cursors&&(this.cursors=M({},this.cursors,t.cursors)),t!=null&&t.snapping&&(this.snapping=t.snapping),(t==null?void 0:t.keyEvents)===null?this.keyEvents={cancel:null,finish:null}:t!=null&&t.keyEvents&&(this.keyEvents=M({},this.keyEvents,t.keyEvents)),t!=null&&t.insertCoordinates&&(this.insertCoordinates=t.insertCoordinates),t&&t.editable&&(this.editable=t.editable)}close(){if(this.currentId===void 0)return;const t=this.store.getGeometryCopy(this.currentId);t.coordinates.pop(),this.updateGeometries([...t.coordinates],void 0,I.Commit),this.store.updateProperty([{id:this.currentId,property:N,value:void 0}]);const e=this.currentId;this.closingPointId&&this.store.delete([this.closingPointId]),this.snappedPointId&&this.store.delete([this.snappedPointId]),this.currentCoordinate=0,this.currentId=void 0,this.closingPointId=void 0,this.snappedPointId=void 0,this.lastCommitedCoordinates=void 0,this.state==="drawing"&&this.setStarted(),this.onFinish(e,{mode:this.mode,action:"draw"})}updateGeometries(t,e,i){if(!this.currentId)return;const o={type:"LineString",coordinates:t};if(this.validate&&!this.validate({type:"Feature",geometry:o},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:i}).valid)return;const s=[{id:this.currentId,geometry:o}];this.closingPointId&&e&&s.push({id:this.closingPointId,geometry:{type:"Point",coordinates:e}}),i==="commit"&&(this.lastCommitedCoordinates=o.coordinates),this.store.updateGeometry(s)}generateInsertCoordinates(t,e){if(!this.insertCoordinates||!this.lastCommitedCoordinates)throw new Error("Not able to insert coordinates");if(this.insertCoordinates.strategy!=="amount")throw new Error("Strategy does not exist");const i=T(t,e)/(this.insertCoordinates.value+1);let o=[];return this.projection==="globe"?o=this.insertPoint.generateInsertionGeodesicCoordinates(t,e,i):this.projection==="web-mercator"&&(o=this.insertPoint.generateInsertionCoordinates(t,e,i)),o}createLine(t){const[e]=this.store.create([{geometry:{type:"LineString",coordinates:[t,t]},properties:{mode:this.mode,[N]:!0}}]);this.lastCommitedCoordinates=[t,t],this.currentId=e,this.currentCoordinate++,this.setDrawing()}firstUpdateToLine(t){if(!this.currentId)return;const e=this.store.getGeometryCopy(this.currentId).coordinates,[i]=this.store.create([{geometry:{type:"Point",coordinates:[...t]},properties:{mode:this.mode}}]);this.closingPointId=i,this.setCursor(this.cursors.close);const o=[...e,t];this.updateGeometries(o,void 0,I.Commit),this.currentCoordinate++}updateToLine(t,e){if(!this.currentId)return;const i=this.store.getGeometryCopy(this.currentId).coordinates,[o,s]=this.lastCommitedCoordinates?this.lastCommitedCoordinates[this.lastCommitedCoordinates.length-1]:i[i.length-2],{x:n,y:a}=this.project(o,s);if(G({x:n,y:a},{x:e.x,y:e.y})<this.pointerDistance)return void this.close();this.setCursor(this.cursors.close);const d=[...i,t];this.updateGeometries(d,i[i.length-1],I.Commit),this.currentCoordinate++}registerBehaviors(t){this.coordinateSnapping=new Ct(t,new ht(t),new lt(t)),this.insertPoint=new Ue(t),this.clickBoundingBox=new lt(t),this.pixelDistance=new ht(t),this.lineSnapping=new Wt(t,this.pixelDistance,this.clickBoundingBox),this.coordinateSnapping=new Ct(t,this.pixelDistance,this.clickBoundingBox)}start(){this.setStarted(),this.setCursor(this.cursors.start)}stop(){this.cleanUp(),this.setStopped(),this.setCursor("unset")}onMouseMove(t){this.mouseMove=!0,this.setCursor(this.cursors.start);const e=this.snapCoordinate(t);if(e){if(this.snappedPointId)this.store.updateGeometry([{id:this.snappedPointId,geometry:{type:"Point",coordinates:e}}]);else{const[n]=this.store.create([{geometry:{type:"Point",coordinates:e},properties:{mode:this.mode,[Ft]:!0}}]);this.snappedPointId=n}t.lng=e[0],t.lat=e[1]}else this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0);const i=e||[t.lng,t.lat];if(this.currentId===void 0||this.currentCoordinate===0)return;const o=this.store.getGeometryCopy(this.currentId).coordinates;if(o.pop(),this.closingPointId){const[n,a]=o[o.length-1],{x:d,y:l}=this.project(n,a);G({x:d,y:l},{x:t.containerX,y:t.containerY})<this.pointerDistance&&this.setCursor(this.cursors.close)}let s=[...o,i];if(this.insertCoordinates&&this.currentId&&this.lastCommitedCoordinates){const n=this.lastCommitedCoordinates[this.lastCommitedCoordinates.length-1],a=i;if(!mt(n,a)){const d=this.generateInsertCoordinates(n,a);s=[...this.lastCommitedCoordinates.slice(0,-1),...d,i]}}this.updateGeometries(s,void 0,I.Provisional)}onRightClick(t){if(!this.editable||this.state!=="started")return;const{featureId:e,featureCoordinateIndex:i}=this.coordinateSnapping.getSnappable(t,n=>this.lineStringFilter(n));if(!e||i===void 0)return;const o=this.store.getGeometryCopy(e);let s;if(o.type==="LineString"&&(s=o.coordinates,!(s.length<=2))){if(s.splice(i,1),this.validate&&!this.validate({id:e,type:"Feature",geometry:o,properties:{}},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:I.Commit}).valid)return;this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0),this.store.updateGeometry([{id:e,geometry:o}]),this.onFinish(e,{mode:this.mode,action:"edit"})}}onLeftClick(t){this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0);const e=this.snapCoordinate(t)||[t.lng,t.lat];this.currentCoordinate===0?this.createLine(e):this.currentCoordinate===1&&this.currentId?this.firstUpdateToLine(e):this.currentId&&this.updateToLine(e,{x:t.containerX,y:t.containerY})}onClick(t){(t.button==="right"&&this.allowPointerEvent(this.pointerEvents.rightClick,t)||t.button==="left"&&this.allowPointerEvent(this.pointerEvents.leftClick,t)||t.isContextMenu&&this.allowPointerEvent(this.pointerEvents.contextMenu,t))&&(this.currentCoordinate>0&&!this.mouseMove&&this.onMouseMove(t),this.mouseMove=!1,t.button==="right"?this.onRightClick(t):t.button==="left"&&this.onLeftClick(t))}onKeyDown(){}onKeyUp(t){t.key===this.keyEvents.cancel&&this.cleanUp(),t.key===this.keyEvents.finish&&this.close()}onDragStart(t,e){if(!this.allowPointerEvent(this.pointerEvents.onDragStart,t)||!this.editable)return;let i;if(this.state==="started"){const o=this.lineSnapping.getSnappable(t,n=>this.lineStringFilter(n));o.coordinate&&(this.editedSnapType="line",this.editedFeatureCoordinateIndex=o.featureCoordinateIndex,this.editedFeatureId=o.featureId,i=o.coordinate);const s=this.coordinateSnapping.getSnappable(t,n=>this.lineStringFilter(n));s.coordinate&&(this.editedSnapType="coordinate",this.editedFeatureCoordinateIndex=s.featureCoordinateIndex,this.editedFeatureId=s.featureId,i=s.coordinate)}if(this.editedFeatureId&&i){if(!this.editedPointId){const[o]=this.store.create([{geometry:{type:"Point",coordinates:i},properties:{mode:this.mode,[R]:!0}}]);this.editedPointId=o}this.setCursor(this.cursors.dragStart),e(!1)}}onDrag(t,e){if(!this.allowPointerEvent(this.pointerEvents.onDrag,t)||this.editedFeatureId===void 0||this.editedFeatureCoordinateIndex===void 0)return;const i=this.store.getGeometryCopy(this.editedFeatureId);this.editedSnapType==="coordinate"||this.editedSnapType==="line"&&this.editedInsertIndex!==void 0?i.coordinates[this.editedFeatureCoordinateIndex]=[t.lng,t.lat]:this.editedSnapType==="line"&&this.editedInsertIndex===void 0&&(this.editedInsertIndex=this.editedFeatureCoordinateIndex+1,i.coordinates.splice(this.editedInsertIndex,0,[t.lng,t.lat]),this.editedFeatureCoordinateIndex++);const o={type:"LineString",coordinates:i.coordinates};this.validate&&!this.validate({type:"Feature",geometry:o,properties:this.store.getPropertiesCopy(this.editedFeatureId)},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:I.Provisional}).valid||(this.snapping&&this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0),this.store.updateGeometry([{id:this.editedFeatureId,geometry:o}]),this.editedPointId&&this.store.updateGeometry([{id:this.editedPointId,geometry:{type:"Point",coordinates:[t.lng,t.lat]}}]),this.store.updateProperty([{id:this.editedFeatureId,property:R,value:!0}]))}onDragEnd(t,e){this.allowPointerEvent(this.pointerEvents.onDragEnd,t)&&this.editedFeatureId!==void 0&&(this.setCursor(this.cursors.dragEnd),this.editedPointId&&(this.store.delete([this.editedPointId]),this.editedPointId=void 0),this.store.updateProperty([{id:this.editedFeatureId,property:R,value:!1}]),this.onFinish(this.editedFeatureId,{mode:this.mode,action:"edit"}),this.editedFeatureId=void 0,this.editedFeatureCoordinateIndex=void 0,this.editedInsertIndex=void 0,this.editedSnapType=void 0,e(!0))}cleanUp(){const t=this.currentId,e=this.closingPointId,i=this.snappedPointId;this.closingPointId=void 0,this.snappedPointId=void 0,this.currentId=void 0,this.currentCoordinate=0,this.state==="drawing"&&this.setStarted();try{t!==void 0&&this.store.delete([t]),i!==void 0&&this.store.delete([i]),e!==void 0&&this.store.delete([e])}catch{}}styleFeature(t){const e=M({},{polygonFillColor:"#3f97e0",polygonOutlineColor:"#3f97e0",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:"#3f97e0",pointOutlineColor:"#ffffff",pointOutlineWidth:0,pointWidth:6,lineStringColor:"#3f97e0",lineStringWidth:4,zIndex:0});if(t.type==="Feature"&&t.geometry.type==="LineString"&&t.properties.mode===this.mode)return e.lineStringColor=this.getHexColorStylingValue(this.styles.lineStringColor,e.lineStringColor,t),e.lineStringWidth=this.getNumericStylingValue(this.styles.lineStringWidth,e.lineStringWidth,t),e.zIndex=U,e;if(t.type==="Feature"&&t.geometry.type==="Point"&&t.properties.mode===this.mode){const i=t.properties[et];return e.pointColor=this.getHexColorStylingValue(i?this.styles.closingPointColor:this.styles.snappingPointColor,e.pointColor,t),e.pointWidth=this.getNumericStylingValue(i?this.styles.closingPointWidth:this.styles.snappingPointWidth,e.pointWidth,t),e.pointOutlineColor=this.getHexColorStylingValue(i?this.styles.closingPointOutlineColor:this.styles.snappingPointOutlineColor,"#ffffff",t),e.pointOutlineWidth=this.getNumericStylingValue(i?this.styles.closingPointOutlineWidth:this.styles.snappingPointOutlineWidth,2,t),e.zIndex=50,e}return e}validateFeature(t){return this.validateModeFeature(t,e=>Ve(e,this.coordinatePrecision))}lineStringFilter(t){return!!(t.geometry.type==="LineString"&&t.properties&&t.properties.mode===this.mode)}snapCoordinate(t){var e,i,o;let s;if((e=this.snapping)!=null&&e.toLine){let n;n=this.currentId?this.lineSnapping.getSnappableCoordinate(t,this.currentId):this.lineSnapping.getSnappableCoordinateFirstClick(t),n&&(s=n)}return(i=this.snapping)!=null&&i.toCoordinate&&(s=this.currentId?this.coordinateSnapping.getSnappableCoordinate(t,this.currentId):this.coordinateSnapping.getSnappableCoordinateFirstClick(t)),(o=this.snapping)!=null&&o.toCustom&&(s=this.snapping.toCustom(t,{currentCoordinate:this.currentCoordinate,currentId:this.currentId,getCurrentGeometrySnapshot:this.currentId?()=>this.store.getGeometryCopy(this.currentId):()=>null,project:this.project,unproject:this.unproject})),s}}const He="Feature is not a Point",qe="Feature has invalid coordinates",Je="Feature has coordinates with excessive precision";function Ze(r,t){return r.geometry.type!=="Point"?{valid:!1,reason:He}:Bt(r.geometry.coordinates)?Pt(r.geometry.coordinates,t)?{valid:!0}:{valid:!1,reason:Je}:{valid:!1,reason:qe}}const Qe={create:"crosshair",dragStart:"grabbing",dragEnd:"crosshair"};class ti extends z{constructor(t){super(t,!0),this.mode="point",this.cursors=Qe,this.editable=!1,this.editedFeatureId=void 0,this.pixelDistance=void 0,this.clickBoundingBox=void 0,this.updateOptions(t)}updateOptions(t){super.updateOptions(t),t!=null&&t.cursors&&(this.cursors=M({},this.cursors,t.cursors)),t!=null&&t.editable&&(this.editable=t.editable)}start(){this.setStarted(),this.setCursor(this.cursors.create)}stop(){this.cleanUp(),this.setStopped(),this.setCursor("unset")}onClick(t){t.button==="right"&&this.allowPointerEvent(this.pointerEvents.rightClick,t)||t.isContextMenu&&this.allowPointerEvent(this.pointerEvents.contextMenu,t)?this.onRightClick(t):t.button==="left"&&this.allowPointerEvent(this.pointerEvents.leftClick,t)&&this.onLeftClick(t)}onMouseMove(){}onKeyDown(){}onKeyUp(){}cleanUp(){this.editedFeatureId=void 0}onDragStart(t,e){if(this.allowPointerEvent(this.pointerEvents.onDragStart,t)){if(this.editable){const i=this.getNearestPointFeature(t);this.editedFeatureId=i==null?void 0:i.id}this.editedFeatureId&&(this.setCursor(this.cursors.dragStart),e(!1))}}onDrag(t,e){this.allowPointerEvent(this.pointerEvents.onDrag,t)&&this.editedFeatureId!==void 0&&(this.validate&&!this.validate({type:"Feature",geometry:{type:"Point",coordinates:[t.lng,t.lat]},properties:this.store.getPropertiesCopy(this.editedFeatureId)},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:I.Finish}).valid||(this.store.updateGeometry([{id:this.editedFeatureId,geometry:{type:"Point",coordinates:[t.lng,t.lat]}}]),this.store.updateProperty([{id:this.editedFeatureId,property:R,value:!0}])))}onDragEnd(t,e){this.allowPointerEvent(this.pointerEvents.onDragEnd,t)&&this.editedFeatureId!==void 0&&(this.onFinish(this.editedFeatureId,{mode:this.mode,action:"edit"}),this.setCursor(this.cursors.dragEnd),this.store.updateProperty([{id:this.editedFeatureId,property:R,value:!1}]),this.editedFeatureId=void 0,e(!0))}registerBehaviors(t){this.pixelDistance=new ht(t),this.clickBoundingBox=new lt(t)}styleFeature(t){const e=M({},{polygonFillColor:"#3f97e0",polygonOutlineColor:"#3f97e0",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:"#3f97e0",pointOutlineColor:"#ffffff",pointOutlineWidth:0,pointWidth:6,lineStringColor:"#3f97e0",lineStringWidth:4,zIndex:0});if(t.type==="Feature"&&t.geometry.type==="Point"&&t.properties.mode===this.mode){const i=!!(t.id&&this.editedFeatureId===t.id);e.pointWidth=this.getNumericStylingValue(i?this.styles.editedPointWidth:this.styles.pointWidth,e.pointWidth,t),e.pointColor=this.getHexColorStylingValue(i?this.styles.editedPointColor:this.styles.pointColor,e.pointColor,t),e.pointOutlineColor=this.getHexColorStylingValue(i?this.styles.editedPointOutlineColor:this.styles.pointOutlineColor,e.pointOutlineColor,t),e.pointOutlineWidth=this.getNumericStylingValue(i?this.styles.editedPointOutlineWidth:this.styles.pointOutlineWidth,2,t),e.zIndex=30}return e}validateFeature(t){return this.validateModeFeature(t,e=>Ze(e,this.coordinatePrecision))}onLeftClick(t){const e={type:"Point",coordinates:[t.lng,t.lat]},i={mode:this.mode};if(this.validate&&!this.validate({type:"Feature",geometry:e,properties:i},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:I.Finish}).valid)return;const[o]=this.store.create([{geometry:e,properties:i}]);this.onFinish(o,{mode:this.mode,action:"draw"})}onRightClick(t){if(!this.editable)return;const e=this.getNearestPointFeature(t);e&&this.store.delete([e.id])}getNearestPointFeature(t){const e=this.clickBoundingBox.create(t),i=this.store.search(e);let o,s=1/0;for(let n=0;n<i.length;n++){const a=i[n];if(a.geometry.type!=="Point"||a.properties.mode!==this.mode)continue;const d=this.pixelDistance.measure(t,a.geometry.coordinates);d>s||d>this.pointerDistance||(s=d,o=a)}return o}}class ei extends k{constructor(t,e){super(t),this.config=void 0,this.pixelDistance=void 0,this._startEndPoints=[],this.config=t,this.pixelDistance=e}get ids(){return this._startEndPoints.concat()}set ids(t){}create(t,e){if(this.ids.length)throw new Error("Opening and closing points already created");if(t.length<=3)throw new Error("Requires at least 4 coordinates");this._startEndPoints=this.store.create([{geometry:{type:"Point",coordinates:t[0]},properties:{mode:e,[et]:!0}},{geometry:{type:"Point",coordinates:t[t.length-2]},properties:{mode:e,[et]:!0}}])}delete(){this.ids.length&&(this.store.delete(this.ids),this._startEndPoints=[])}update(t){if(this.ids.length!==2)throw new Error("No closing points to update");this.store.updateGeometry([{id:this.ids[0],geometry:{type:"Point",coordinates:t[0]}},{id:this.ids[1],geometry:{type:"Point",coordinates:t[t.length-3]}}])}isClosingPoint(t){const e=this.store.getGeometryCopy(this.ids[0]),i=this.store.getGeometryCopy(this.ids[1]),o=this.pixelDistance.measure(t,e.coordinates),s=this.pixelDistance.measure(t,i.coordinates);return{isClosing:o<this.pointerDistance,isPreviousClosing:s<this.pointerDistance}}}class fe extends k{constructor(t){super(t)}createOrUpdate(t){const e=this.store.getGeometryCopy(t),i=this.store.getPropertiesCopy(t);let o;if(e.type==="Polygon")o=e.coordinates[0].slice(0,-1);else{if(e.type!=="LineString")return;o=e.coordinates}const s=this.store.getPropertiesCopy(t),n=s.coordinatePointIds;if(n)if(n&&n.every(a=>this.store.has(a))){const a=s.coordinatePointIds,d=a.map(l=>this.store.getGeometryCopy(l).coordinates);if(a.length!==o.length){this.deleteCoordinatePoints(a);const l=this.createPoints(o,i.mode,t);this.setFeatureCoordinatePoints(t,l)}else o.forEach((l,h)=>{l[0]===d[h][0]&&l[1]===d[h][1]||this.store.updateGeometry([{id:a[h],geometry:{type:"Point",coordinates:l}}])})}else{const a=n.filter(l=>this.store.has(l));a.length&&this.deleteCoordinatePoints(a);const d=this.createPoints(o,i.mode,t);this.setFeatureCoordinatePoints(t,d)}else{const a=this.createPoints(o,i.mode,t);this.setFeatureCoordinatePoints(t,a)}}deletePointsByFeatureIds(t){for(const e of t)this.deleteIfPresent(e)}getUpdated(t,e){const i=this.store.getPropertiesCopy(t);if(i.coordinatePointIds)return i.coordinatePointIds.map((o,s)=>({id:o,geometry:M({},this.store.getGeometryCopy(o),{coordinates:e[s]})}))}createPoints(t,e,i){return this.store.create(t.map((o,s)=>({geometry:{type:"Point",coordinates:o},properties:{mode:e,[Ot]:!0,[Se]:i,index:s}})))}setFeatureCoordinatePoints(t,e){this.store.updateProperty([{id:t,property:dt,value:e}])}deleteCoordinatePoints(t){const e=t.filter(i=>this.store.has(i));this.store.delete(e)}deleteIfPresent(t){const e=this.store.getPropertiesCopy(t).coordinatePointIds;e&&(this.deleteCoordinatePoints(e),this.setFeatureCoordinatePoints(t,null))}}const ii={cancel:"Escape",finish:"Enter"},oi={start:"crosshair",close:"pointer",dragStart:"grabbing",dragEnd:"crosshair"};class si extends z{constructor(t){super(t,!0),this.mode="polygon",this.currentCoordinate=0,this.currentId=void 0,this.keyEvents=ii,this.cursors=oi,this.mouseMove=!1,this.showCoordinatePoints=!1,this.snapping=void 0,this.snappedPointId=void 0,this.editable=!1,this.editedFeatureId=void 0,this.editedFeatureCoordinateIndex=void 0,this.editedSnapType=void 0,this.editedInsertIndex=void 0,this.editedPointId=void 0,this.coordinatePoints=void 0,this.lineSnapping=void 0,this.coordinateSnapping=void 0,this.pixelDistance=void 0,this.closingPoints=void 0,this.clickBoundingBox=void 0,this.updateOptions(t)}updateOptions(t){if(super.updateOptions(t),t!=null&&t.cursors&&(this.cursors=M({},this.cursors,t.cursors)),(t==null?void 0:t.keyEvents)===null?this.keyEvents={cancel:null,finish:null}:t!=null&&t.keyEvents&&(this.keyEvents=M({},this.keyEvents,t.keyEvents)),t!=null&&t.snapping&&(this.snapping=t.snapping),(t==null?void 0:t.editable)!==void 0&&(this.editable=t.editable),(t==null?void 0:t.pointerEvents)!==void 0&&(this.pointerEvents=t.pointerEvents),(t==null?void 0:t.showCoordinatePoints)!==void 0){if(this.showCoordinatePoints=t.showCoordinatePoints,this.coordinatePoints&&t.showCoordinatePoints===!0)this.store.copyAllWhere(e=>e.mode===this.mode).map(e=>e.id).forEach(e=>{this.coordinatePoints.createOrUpdate(e)});else if(this.coordinatePoints&&this.showCoordinatePoints===!1){const e=this.store.copyAllWhere(i=>i.mode===this.mode&&!!i[dt]);this.coordinatePoints.deletePointsByFeatureIds(e.map(i=>i.id))}}}close(){if(this.currentId===void 0)return;const t=this.store.getGeometryCopy(this.currentId).coordinates[0];if(t.length<5||!this.updatePolygonGeometry([...t.slice(0,-2),t[0]],I.Finish))return;const e=this.currentId;if(this.currentId){const i=Lt(this.store.getGeometryCopy(this.currentId));i&&this.store.updateGeometry([{id:this.currentId,geometry:i}]),this.store.updateProperty([{id:this.currentId,property:N,value:void 0}])}this.snappedPointId&&this.store.delete([this.snappedPointId]),this.currentCoordinate=0,this.currentId=void 0,this.snappedPointId=void 0,this.closingPoints.delete(),this.state==="drawing"&&this.setStarted(),this.onFinish(e,{mode:this.mode,action:"draw"})}registerBehaviors(t){this.clickBoundingBox=new lt(t),this.pixelDistance=new ht(t),this.lineSnapping=new Wt(t,this.pixelDistance,this.clickBoundingBox),this.coordinateSnapping=new Ct(t,this.pixelDistance,this.clickBoundingBox),this.closingPoints=new ei(t,this.pixelDistance),this.coordinatePoints=new fe(t)}start(){this.setStarted(),this.setCursor(this.cursors.start)}stop(){this.cleanUp(),this.setStopped(),this.setCursor("unset")}onMouseMove(t){this.mouseMove=!0,this.setCursor(this.cursors.start);const e=this.snapCoordinate(t);if(e){if(this.snappedPointId)this.store.updateGeometry([{id:this.snappedPointId,geometry:{type:"Point",coordinates:e}}]);else{const[s]=this.store.create([{geometry:{type:"Point",coordinates:e},properties:{mode:this.mode,[Ft]:!0}}]);this.snappedPointId=s}t.lng=e[0],t.lat=e[1]}else this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0);if(this.currentId===void 0||this.currentCoordinate===0)return;const i=this.store.getGeometryCopy(this.currentId).coordinates[0];let o;if(this.currentCoordinate===1){const s=1/Math.pow(10,this.coordinatePrecision-1),n=Math.max(1e-6,s);o=[i[0],[t.lng,t.lat],[t.lng,t.lat-n],i[0]]}else if(this.currentCoordinate===2)o=[i[0],i[1],[t.lng,t.lat],i[0]];else{const{isClosing:s,isPreviousClosing:n}=this.closingPoints.isClosingPoint(t);n||s?(this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0),this.setCursor(this.cursors.close),o=[...i.slice(0,-2),i[0],i[0]]):o=[...i.slice(0,-2),[t.lng,t.lat],i[0]]}this.updatePolygonGeometry(o,I.Provisional)}updatePolygonGeometry(t,e){if(!this.currentId)return!1;const i={type:"Polygon",coordinates:[t]};return!(this.validate&&!this.validate({type:"Feature",geometry:i},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:e}).valid||(this.store.updateGeometry([{id:this.currentId,geometry:i}]),this.showCoordinatePoints&&this.coordinatePoints.createOrUpdate(this.currentId),0))}snapCoordinate(t){var e,i,o;let s;if((e=this.snapping)!=null&&e.toLine){let n;n=this.currentId?this.lineSnapping.getSnappableCoordinate(t,this.currentId):this.lineSnapping.getSnappableCoordinateFirstClick(t),n&&(s=n)}if((i=this.snapping)!=null&&i.toCoordinate){let n;n=this.currentId?this.coordinateSnapping.getSnappableCoordinate(t,this.currentId):this.coordinateSnapping.getSnappableCoordinateFirstClick(t),n&&(s=n)}return(o=this.snapping)!=null&&o.toCustom&&(s=this.snapping.toCustom(t,{currentCoordinate:this.currentCoordinate,currentId:this.currentId,getCurrentGeometrySnapshot:this.currentId?()=>this.store.getGeometryCopy(this.currentId):()=>null,project:this.project,unproject:this.unproject})),s}polygonFilter(t){return!!(t.geometry.type==="Polygon"&&t.properties&&t.properties.mode===this.mode)}onRightClick(t){if(!this.editable||this.state!=="started")return;const{featureId:e,featureCoordinateIndex:i}=this.coordinateSnapping.getSnappable(t,n=>this.polygonFilter(n));if(!e||i===void 0)return;const o=this.store.getGeometryCopy(e);let s;o.type==="Polygon"&&(s=o.coordinates[0],s.length<=4||(o.type!=="Polygon"||i!==0&&i!==s.length-1?s.splice(i,1):(s.shift(),s.pop(),s.push([s[0][0],s[0][1]])),(!this.validate||this.validate({id:e,type:"Feature",geometry:o,properties:{}},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:I.Commit}).valid)&&(this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0),this.store.updateGeometry([{id:e,geometry:o}]),this.showCoordinatePoints&&this.coordinatePoints.createOrUpdate(e),this.onFinish(e,{mode:this.mode,action:"edit"}))))}onLeftClick(t){if(this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0),this.currentCoordinate===0){const e=this.snapCoordinate(t);e&&(t.lng=e[0],t.lat=e[1]);const[i]=this.store.create([{geometry:{type:"Polygon",coordinates:[[[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat]]]},properties:{mode:this.mode,[N]:!0}}]);this.currentId=i,this.currentCoordinate++,this.showCoordinatePoints&&this.coordinatePoints.createOrUpdate(i),this.setDrawing()}else if(this.currentCoordinate===1&&this.currentId){const e=this.snapCoordinate(t);e&&(t.lng=e[0],t.lat=e[1]);const i=this.store.getGeometryCopy(this.currentId);if(mt([t.lng,t.lat],i.coordinates[0][0])||!this.updatePolygonGeometry([i.coordinates[0][0],[t.lng,t.lat],[t.lng,t.lat],i.coordinates[0][0]],I.Commit))return;this.currentCoordinate++}else if(this.currentCoordinate===2&&this.currentId){const e=this.snapCoordinate(t);e&&(t.lng=e[0],t.lat=e[1]);const i=this.store.getGeometryCopy(this.currentId).coordinates[0];if(mt([t.lng,t.lat],i[1])||!this.updatePolygonGeometry([i[0],i[1],[t.lng,t.lat],[t.lng,t.lat],i[0]],I.Commit))return;this.currentCoordinate===2&&this.closingPoints.create(i,"polygon"),this.currentCoordinate++}else if(this.currentId){const e=this.store.getGeometryCopy(this.currentId).coordinates[0],{isClosing:i,isPreviousClosing:o}=this.closingPoints.isClosingPoint(t);if(o||i)this.close();else{const s=this.snapCoordinate(t);if(s&&(t.lng=s[0],t.lat=s[1]),mt([t.lng,t.lat],e[this.currentCoordinate-1]))return;const n=function(a=[[[0,0],[0,1],[1,1],[1,0],[0,0]]]){return{type:"Feature",geometry:{type:"Polygon",coordinates:a},properties:{}}}([[...e.slice(0,-1),[t.lng,t.lat],e[0]]]);if(!this.updatePolygonGeometry(n.geometry.coordinates[0],I.Commit))return;this.currentCoordinate++,this.closingPoints.ids.length&&this.closingPoints.update(n.geometry.coordinates[0])}}}onClick(t){this.currentCoordinate>0&&!this.mouseMove&&this.onMouseMove(t),this.mouseMove=!1,t.button==="right"&&this.allowPointerEvent(this.pointerEvents.rightClick,t)||t.isContextMenu&&this.allowPointerEvent(this.pointerEvents.contextMenu,t)?this.onRightClick(t):t.button==="left"&&this.allowPointerEvent(this.pointerEvents.leftClick,t)&&this.onLeftClick(t)}onKeyUp(t){t.key===this.keyEvents.cancel?this.cleanUp():t.key===this.keyEvents.finish&&this.close()}onKeyDown(){}onDragStart(t,e){if(!this.allowPointerEvent(this.pointerEvents.onDragStart,t)||!this.editable)return;let i;if(this.state==="started"){const o=this.lineSnapping.getSnappable(t,n=>this.polygonFilter(n));o.coordinate&&(this.editedSnapType="line",this.editedFeatureCoordinateIndex=o.featureCoordinateIndex,this.editedFeatureId=o.featureId,i=o.coordinate);const s=this.coordinateSnapping.getSnappable(t,n=>this.polygonFilter(n));s.coordinate&&(this.editedSnapType="coordinate",this.editedFeatureCoordinateIndex=s.featureCoordinateIndex,this.editedFeatureId=s.featureId,i=s.coordinate)}if(this.editedFeatureId&&i){if(!this.editedPointId){const[o]=this.store.create([{geometry:{type:"Point",coordinates:i},properties:{mode:this.mode,[R]:!0}}]);this.editedPointId=o}this.setCursor(this.cursors.dragStart),e(!1)}}onDrag(t,e){if(!this.allowPointerEvent(this.pointerEvents.onDrag,t)||this.editedFeatureId===void 0||this.editedFeatureCoordinateIndex===void 0)return;const i=this.store.getGeometryCopy(this.editedFeatureId),o=i.coordinates[0];this.editedSnapType==="coordinate"||this.editedSnapType==="line"&&this.editedInsertIndex!==void 0?this.editedFeatureCoordinateIndex===0||this.editedFeatureCoordinateIndex===i.coordinates[0].length-1?(o[0]=[t.lng,t.lat],o[o.length-1]=[t.lng,t.lat]):o[this.editedFeatureCoordinateIndex]=[t.lng,t.lat]:this.editedSnapType==="line"&&this.editedInsertIndex===void 0&&(this.editedInsertIndex=this.editedFeatureCoordinateIndex+1,i.coordinates[0].splice(this.editedInsertIndex,0,[t.lng,t.lat]),this.editedFeatureCoordinateIndex++);const s={type:"Polygon",coordinates:i.coordinates};this.validate&&!this.validate({type:"Feature",geometry:s,properties:this.store.getPropertiesCopy(this.editedFeatureId)},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:I.Provisional}).valid||(this.snapping&&this.snappedPointId&&(this.store.delete([this.snappedPointId]),this.snappedPointId=void 0),this.store.updateGeometry([{id:this.editedFeatureId,geometry:s}]),this.showCoordinatePoints&&this.coordinatePoints.createOrUpdate(this.editedFeatureId),this.editedPointId&&this.store.updateGeometry([{id:this.editedPointId,geometry:{type:"Point",coordinates:[t.lng,t.lat]}}]),this.store.updateProperty([{id:this.editedFeatureId,property:R,value:!0}]))}onDragEnd(t,e){this.allowPointerEvent(this.pointerEvents.onDragEnd,t)&&this.editedFeatureId!==void 0&&(this.setCursor(this.cursors.dragEnd),this.editedPointId&&(this.store.delete([this.editedPointId]),this.editedPointId=void 0),this.store.updateProperty([{id:this.editedFeatureId,property:R,value:!1}]),this.onFinish(this.editedFeatureId,{mode:this.mode,action:"edit"}),this.editedFeatureId=void 0,this.editedFeatureCoordinateIndex=void 0,this.editedInsertIndex=void 0,this.editedSnapType=void 0,e(!0))}cleanUp(){const t=this.currentId,e=this.snappedPointId,i=this.editedPointId;this.currentId=void 0,this.snappedPointId=void 0,this.editedPointId=void 0,this.editedFeatureId=void 0,this.editedFeatureCoordinateIndex=void 0,this.editedInsertIndex=void 0,this.editedSnapType=void 0,this.currentCoordinate=0,this.state==="drawing"&&this.setStarted();try{t&&this.coordinatePoints.deletePointsByFeatureIds([t]),t!==void 0&&this.store.delete([t]),i!==void 0&&this.store.delete([i]),e!==void 0&&this.store.delete([e]),this.closingPoints.ids.length&&this.closingPoints.delete()}catch{}}styleFeature(t){const e=M({},{polygonFillColor:"#3f97e0",polygonOutlineColor:"#3f97e0",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:"#3f97e0",pointOutlineColor:"#ffffff",pointOutlineWidth:0,pointWidth:6,lineStringColor:"#3f97e0",lineStringWidth:4,zIndex:0});if(t.properties.mode===this.mode){if(t.geometry.type==="Polygon")return e.polygonFillColor=this.getHexColorStylingValue(this.styles.fillColor,e.polygonFillColor,t),e.polygonOutlineColor=this.getHexColorStylingValue(this.styles.outlineColor,e.polygonOutlineColor,t),e.polygonOutlineWidth=this.getNumericStylingValue(this.styles.outlineWidth,e.polygonOutlineWidth,t),e.polygonFillOpacity=this.getNumericStylingValue(this.styles.fillOpacity,e.polygonFillOpacity,t),e.zIndex=U,e;if(t.geometry.type==="Point"){const i=t.properties[R],o=t.properties[Ot],s=i?"editedPoint":t.properties[et]?"closingPoint":t.properties[Ft]?"snappingPoint":o?"coordinatePoint":void 0;if(!s)return e;const n={editedPoint:{width:this.styles.editedPointOutlineWidth,color:this.styles.editedPointColor,outlineColor:this.styles.editedPointOutlineColor,outlineWidth:this.styles.editedPointOutlineWidth},closingPoint:{width:this.styles.closingPointWidth,color:this.styles.closingPointColor,outlineColor:this.styles.closingPointOutlineColor,outlineWidth:this.styles.closingPointOutlineWidth},snappingPoint:{width:this.styles.snappingPointWidth,color:this.styles.snappingPointColor,outlineColor:this.styles.snappingPointOutlineColor,outlineWidth:this.styles.snappingPointOutlineWidth},coordinatePoint:{width:this.styles.coordinatePointWidth,color:this.styles.coordinatePointColor,outlineColor:this.styles.coordinatePointOutlineColor,outlineWidth:this.styles.coordinatePointOutlineWidth}};return e.pointWidth=this.getNumericStylingValue(n[s].width,e.pointWidth,t),e.pointColor=this.getHexColorStylingValue(n[s].color,e.pointColor,t),e.pointOutlineColor=this.getHexColorStylingValue(n[s].outlineColor,e.pointOutlineColor,t),e.pointOutlineWidth=this.getNumericStylingValue(n[s].outlineWidth,2,t),e.zIndex=i?40:o?20:30,e}}return e}afterFeatureAdded(t){this.showCoordinatePoints&&this.coordinatePoints.createOrUpdate(t.id)}validateFeature(t){return this.validateModeFeature(t,e=>jt(e,this.coordinatePrecision))}}const ni={cancel:"Escape",finish:"Enter"},ri={start:"crosshair"};class ai extends z{constructor(t){super(t,!0),this.mode="rectangle",this.center=void 0,this.clickCount=0,this.currentRectangleId=void 0,this.keyEvents=ni,this.cursors=ri,this.updateOptions(t)}updateOptions(t){super.updateOptions(t),t!=null&&t.cursors&&(this.cursors=M({},this.cursors,t.cursors)),(t==null?void 0:t.keyEvents)===null?this.keyEvents={cancel:null,finish:null}:t!=null&&t.keyEvents&&(this.keyEvents=M({},this.keyEvents,t.keyEvents))}updateRectangle(t,e){if(this.clickCount===1&&this.center&&this.currentRectangleId){const i=this.store.getGeometryCopy(this.currentRectangleId).coordinates[0][0],o={type:"Polygon",coordinates:[[i,[t.lng,i[1]],[t.lng,t.lat],[i[0],t.lat],i]]};if(this.validate&&!this.validate({id:this.currentRectangleId,geometry:o},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:e}).valid)return;this.store.updateGeometry([{id:this.currentRectangleId,geometry:o}])}}close(){const t=this.currentRectangleId;if(t){const e=Lt(this.store.getGeometryCopy(t));e&&this.store.updateGeometry([{id:t,geometry:e}]),this.store.updateProperty([{id:t,property:N,value:void 0}])}this.center=void 0,this.currentRectangleId=void 0,this.clickCount=0,this.state==="drawing"&&this.setStarted(),t!==void 0&&this.onFinish(t,{mode:this.mode,action:"draw"})}start(){this.setStarted(),this.setCursor(this.cursors.start)}stop(){this.cleanUp(),this.setStopped(),this.setCursor("unset")}onClick(t){if(t.button==="right"&&this.allowPointerEvent(this.pointerEvents.rightClick,t)||t.button==="left"&&this.allowPointerEvent(this.pointerEvents.leftClick,t)||t.isContextMenu&&this.allowPointerEvent(this.pointerEvents.contextMenu,t))if(this.clickCount===0){this.center=[t.lng,t.lat];const[e]=this.store.create([{geometry:{type:"Polygon",coordinates:[[[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat],[t.lng,t.lat]]]},properties:{mode:this.mode,[N]:!0}}]);this.currentRectangleId=e,this.clickCount++,this.setDrawing()}else this.updateRectangle(t,I.Finish),this.close()}onMouseMove(t){this.updateRectangle(t,I.Provisional)}onKeyDown(){}onKeyUp(t){t.key===this.keyEvents.cancel?this.cleanUp():t.key===this.keyEvents.finish&&this.close()}onDragStart(){}onDrag(){}onDragEnd(){}cleanUp(){const t=this.currentRectangleId;this.center=void 0,this.currentRectangleId=void 0,this.clickCount=0,this.state==="drawing"&&this.setStarted(),t!==void 0&&this.store.delete([t])}styleFeature(t){const e=M({},{polygonFillColor:"#3f97e0",polygonOutlineColor:"#3f97e0",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:"#3f97e0",pointOutlineColor:"#ffffff",pointOutlineWidth:0,pointWidth:6,lineStringColor:"#3f97e0",lineStringWidth:4,zIndex:0});return t.type==="Feature"&&t.geometry.type==="Polygon"&&t.properties.mode===this.mode&&(e.polygonFillColor=this.getHexColorStylingValue(this.styles.fillColor,e.polygonFillColor,t),e.polygonOutlineColor=this.getHexColorStylingValue(this.styles.outlineColor,e.polygonOutlineColor,t),e.polygonOutlineWidth=this.getNumericStylingValue(this.styles.outlineWidth,e.polygonOutlineWidth,t),e.polygonFillOpacity=this.getNumericStylingValue(this.styles.fillOpacity,e.polygonFillOpacity,t),e.zIndex=U),e}validateFeature(t){return this.validateModeFeature(t,e=>ge(e,this.coordinatePrecision))}}function _t(r,t){const e=r,i=t,o=_(e[1]),s=_(i[1]);let n=_(i[0]-e[0]);n>Math.PI&&(n-=2*Math.PI),n<-Math.PI&&(n+=2*Math.PI);const a=Math.log(Math.tan(s/2+Math.PI/4)/Math.tan(o/2+Math.PI/4)),d=(V(Math.atan2(n,a))+360)%360;return d>180?-(360-d):d}function me(r,t,e){let i=t;t<0&&(i=-Math.abs(i));const o=i/ce,s=r[0]*Math.PI/180,n=_(r[1]),a=_(e),d=o*Math.cos(a);let l=n+d;Math.abs(l)>Math.PI/2&&(l=l>0?Math.PI-l:-Math.PI-l);const h=Math.log(Math.tan(l/2+Math.PI/4)/Math.tan(n/2+Math.PI/4)),c=Math.abs(h)>1e-11?d/h:Math.cos(n),u=[(180*(s+o*Math.sin(a)/c)/Math.PI+540)%360-180,180*l/Math.PI];return u[0]+=u[0]-r[0]>180?-360:r[0]-u[0]>180?360:0,u}function di(r,t,e,i,o){const s=i(r[0],r[1]),n=i(t[0],t[1]),{lng:a,lat:d}=o((s.x+n.x)/2,(s.y+n.y)/2);return[b(a,e),b(d,e)]}function li(r,t,e){const i=me(r,1e3*T(r,t)/2,_t(r,t));return[b(i[0],e),b(i[1],e)]}function ie({featureCoords:r,precision:t,unproject:e,project:i,projection:o}){const s=[];for(let n=0;n<r.length-1;n++){let a;if(o==="web-mercator")a=di(r[n],r[n+1],t,i,e);else{if(o!=="globe")throw new Error("Invalid projection");a=li(r[n],r[n+1],t)}s.push(a)}return s}class hi extends k{constructor(t,e,i){super(t),this.config=void 0,this.selectionPointBehavior=void 0,this.coordinatePointBehavior=void 0,this._midPoints=[],this.config=t,this.selectionPointBehavior=e,this.coordinatePointBehavior=i}get ids(){return this._midPoints.concat()}set ids(t){}insert(t,e,i){const o=this.store.getGeometryCopy(e),{midPointFeatureId:s,midPointSegment:n}=this.store.getPropertiesCopy(e),a=this.store.getGeometryCopy(s),d=a.type==="Polygon"?a.coordinates[0]:a.coordinates;d.splice(n+1,0,o.coordinates),a.coordinates=a.type==="Polygon"?[d]:d,this.store.updateGeometry([{id:s,geometry:a}]),this.store.getPropertiesCopy(t)[dt]&&this.coordinatePointBehavior.createOrUpdate(t),this.store.delete([...this._midPoints,...this.selectionPointBehavior.ids]),this.create(d,s,i),this.selectionPointBehavior.create(d,a.type,s)}create(t,e,i){if(!this.store.has(e))throw new Error("Store does not have feature with this id");this._midPoints=this.store.create(function(o,s,n,a,d,l){return ie({featureCoords:o,precision:n,project:a,unproject:d,projection:l}).map((h,c)=>({geometry:{type:"Point",coordinates:h},properties:s(c)}))}(t,o=>({mode:this.mode,[L.MID_POINT]:!0,midPointSegment:o,midPointFeatureId:e}),i,this.config.project,this.config.unproject,this.projection))}delete(){this._midPoints.length&&(this.store.delete(this._midPoints),this._midPoints=[])}getUpdated(t){if(this._midPoints.length!==0)return ie({featureCoords:t,precision:this.coordinatePrecision,project:this.config.project,unproject:this.config.unproject,projection:this.config.projection}).map((e,i)=>({id:this._midPoints[i],geometry:{type:"Point",coordinates:e}}))}}class ci extends k{constructor(t){super(t),this._selectionPoints=[]}get ids(){return this._selectionPoints.concat()}set ids(t){}create(t,e,i){this._selectionPoints=this.store.create(function(o,s,n){const a=[],d=s==="Polygon"?o.length-1:o.length;for(let l=0;l<d;l++)a.push({geometry:{type:"Point",coordinates:o[l]},properties:n(l)});return a}(t,e,o=>({mode:this.mode,index:o,[L.SELECTION_POINT]:!0,[L.SELECTION_POINT_FEATURE_ID]:i})))}delete(){this.ids.length&&(this.store.delete(this.ids),this._selectionPoints=[])}getUpdated(t){if(this._selectionPoints.length!==0)return this._selectionPoints.map((e,i)=>({id:e,geometry:{type:"Point",coordinates:t[i]}}))}getOneUpdated(t,e){if(this._selectionPoints[t]!==void 0)return{id:this._selectionPoints[t],geometry:{type:"Point",coordinates:e}}}}function ve(r,t){let e=!1;for(let n=0,a=t.length;n<a;n++){const d=t[n];for(let l=0,h=d.length,c=h-1;l<h;c=l++)(o=d[l])[1]>(i=r)[1]!=(s=d[c])[1]>i[1]&&i[0]<(s[0]-o[0])*(i[1]-o[1])/(s[1]-o[1])+o[0]&&(e=!e)}var i,o,s;return e}const Dt=(r,t,e)=>{const i=s=>s*s,o=(s,n)=>i(s.x-n.x)+i(s.y-n.y);return Math.sqrt(((s,n,a)=>{const d=o(n,a);if(d===0)return o(s,n);let l=((s.x-n.x)*(a.x-n.x)+(s.y-n.y)*(a.y-n.y))/d;return l=Math.max(0,Math.min(1,l)),o(s,{x:n.x+l*(a.x-n.x),y:n.y+l*(a.y-n.y)})})(r,t,e))};class ui extends k{constructor(t,e,i){super(t),this.config=void 0,this.createClickBoundingBox=void 0,this.pixelDistance=void 0,this.config=t,this.createClickBoundingBox=e,this.pixelDistance=i}find(t,e){let i,o,s,n,a=1/0,d=1/0,l=1/0;const h=this.createClickBoundingBox.create(t),c=this.store.search(h);for(let u=0;u<c.length;u++){const p=c[u],g=p.geometry;if(g.type==="Point"){if(p.properties.selectionPoint||p.properties.coordinatePoint||!e&&p.properties[L.MID_POINT])continue;const y=this.pixelDistance.measure(t,g.coordinates);p.properties[L.MID_POINT]&&y<this.pointerDistance&&y<l?(l=y,s=p):!p.properties[L.MID_POINT]&&y<this.pointerDistance&&y<a&&(a=y,i=p)}else if(g.type==="LineString"){if(i)continue;for(let y=0;y<g.coordinates.length-1;y++){const v=g.coordinates[y],m=g.coordinates[y+1],C=Dt({x:t.containerX,y:t.containerY},this.project(v[0],v[1]),this.project(m[0],m[1]));C<this.pointerDistance&&C<d&&(d=C,o=p)}}else if(g.type==="Polygon"){if(i||o)continue;ve([t.lng,t.lat],g.coordinates)&&(n=p)}}return{clickedFeature:i||o||n,clickedMidPoint:s}}}class pi extends k{constructor(t,e,i,o,s){super(t),this.config=void 0,this.featuresAtCursorEvent=void 0,this.selectionPoints=void 0,this.midPoints=void 0,this.coordinatePoints=void 0,this.draggedFeatureId=null,this.dragPosition=void 0,this.config=t,this.featuresAtCursorEvent=e,this.selectionPoints=i,this.midPoints=o,this.coordinatePoints=s}startDragging(t,e){this.draggedFeatureId=e,this.dragPosition=[t.lng,t.lat]}stopDragging(){this.draggedFeatureId=null,this.dragPosition=void 0}isDragging(){return this.draggedFeatureId!==null}canDrag(t,e){const{clickedFeature:i}=this.featuresAtCursorEvent.find(t,!0);return!(!i||i.id!==e)}drag(t,e){if(!this.draggedFeatureId)return;const i=this.store.getGeometryCopy(this.draggedFeatureId),o=[t.lng,t.lat];if(i.type==="Polygon"||i.type==="LineString"){let s,n;if(i.type==="Polygon"?(s=i.coordinates[0],n=s.length-1):(s=i.coordinates,n=s.length),!this.dragPosition)return!1;for(let h=0;h<n;h++){const c=s[h];let u,p;if(this.config.projection==="web-mercator"){const g=S(this.dragPosition[0],this.dragPosition[1]),y=S(o[0],o[1]),v=S(c[0],c[1]),m={x:g.x-y.x,y:g.y-y.y},C=v.x-m.x,f=v.y-m.y,{lng:P,lat:x}=ot(C,f);u=P,p=x}else{const g=[this.dragPosition[0]-o[0],this.dragPosition[1]-o[1]];u=c[0]-g[0],p=c[1]-g[1]}if(u=b(u,this.config.coordinatePrecision),p=b(p,this.config.coordinatePrecision),u>180||u<-180||p>90||p<-90)return!1;s[h]=[u,p]}i.type==="Polygon"&&(s[s.length-1]=[s[0][0],s[0][1]]);const a=this.selectionPoints.getUpdated(s)||[],d=this.midPoints.getUpdated(s)||[],l=this.coordinatePoints.getUpdated(this.draggedFeatureId,s)||[];if(e&&!e({type:"Feature",id:this.draggedFeatureId,geometry:i,properties:{}},{project:this.config.project,unproject:this.config.unproject,coordinatePrecision:this.config.coordinatePrecision,updateType:I.Provisional}).valid)return!1;this.store.updateGeometry([{id:this.draggedFeatureId,geometry:i},...a,...d,...l]),this.dragPosition=[t.lng,t.lat]}else i.type==="Point"&&(this.store.updateGeometry([{id:this.draggedFeatureId,geometry:{type:"Point",coordinates:o}}]),this.dragPosition=[t.lng,t.lat])}}class gi extends k{constructor(t,e,i,o,s,n,a){super(t),this.config=void 0,this.pixelDistance=void 0,this.selectionPoints=void 0,this.midPoints=void 0,this.coordinatePoints=void 0,this.coordinateSnapping=void 0,this.lineSnapping=void 0,this.draggedCoordinate={id:null,index:-1},this.config=t,this.pixelDistance=e,this.selectionPoints=i,this.midPoints=o,this.coordinatePoints=s,this.coordinateSnapping=n,this.lineSnapping=a}getClosestCoordinate(t,e){const i={dist:1/0,index:-1,isFirstOrLastPolygonCoord:!1};let o;if(e.type==="LineString")o=e.coordinates;else{if(e.type!=="Polygon")return i;o=e.coordinates[0]}for(let s=0;s<o.length;s++){const n=this.pixelDistance.measure(t,o[s]);if(n<this.pointerDistance&&n<i.dist){const a=e.type==="Polygon"&&(s===o.length-1||s===0);i.dist=n,i.index=a?0:s,i.isFirstOrLastPolygonCoord=a}}return i}getDraggableIndex(t,e){const i=this.store.getGeometryCopy(e),o=this.getClosestCoordinate(t,i);return o.index===-1?-1:o.index}snapCoordinate(t,e,i){let o=[t.lng,t.lat];const s=n=>!!(n.properties&&n.properties.mode===i.properties.mode&&n.id!==this.draggedCoordinate.id);if(e!=null&&e.toLine){let n;n=this.lineSnapping.getSnappable(t,s).coordinate,n&&(o=n)}if(e.toCoordinate){let n;n=this.coordinateSnapping.getSnappable(t,s).coordinate,n&&(o=n)}if(e!=null&&e.toCustom){let n;n=e.toCustom(t,{currentCoordinate:this.draggedCoordinate.index,currentId:i.id,getCurrentGeometrySnapshot:i.id?()=>this.store.getGeometryCopy(i.id):()=>null,project:this.project,unproject:this.unproject}),n&&(o=n)}return o}drag(t,e,i,o){const s=this.draggedCoordinate.id;if(s===null)return!1;const n=this.draggedCoordinate.index,a=this.store.getGeometryCopy(s),d=this.store.getPropertiesCopy(s),l=a.type==="LineString"?a.coordinates:a.coordinates[0],h=a.type==="Polygon"&&(n===l.length-1||n===0),c={type:"Feature",id:s,geometry:a,properties:d},u=this.snapCoordinate(t,o,c);if(t.lng>180||t.lng<-180||t.lat>90||t.lat<-90)return!1;if(h){const m=l.length-1;l[0]=u,l[m]=u}else l[n]=u;const p=this.selectionPoints.getOneUpdated(n,u),g=p?[p]:[],y=this.midPoints.getUpdated(l)||[],v=this.coordinatePoints.getUpdated(s,l)||[];return!(a.type!=="Point"&&!e&&pe({geometry:a})||i&&!i(c,{project:this.config.project,unproject:this.config.unproject,coordinatePrecision:this.config.coordinatePrecision,updateType:I.Provisional}).valid||(this.store.updateGeometry([{id:s,geometry:a},...g,...y,...v]),0))}isDragging(){return this.draggedCoordinate.id!==null}startDragging(t,e){this.draggedCoordinate={id:t,index:e}}stopDragging(){this.draggedCoordinate={id:null,index:-1}}}function oe(r){let t=0,e=0,i=0;return(r.geometry.type==="Polygon"?r.geometry.coordinates[0].slice(0,-1):r.geometry.coordinates).forEach(o=>{t+=o[0],e+=o[1],i++},!0),[t/i,e/i]}function kt(r){const t=(r.geometry.type==="Polygon"?r.geometry.coordinates[0]:r.geometry.coordinates).map(e=>{const{x:i,y:o}=S(e[0],e[1]);return[i,o]});return r.geometry.type==="Polygon"?function(e){let i=0,o=0,s=0;const n=e.length;for(let a=0;a<n-1;a++){const[d,l]=e[a],[h,c]=e[a+1],u=d*c-h*l;i+=u,o+=(d+h)*u,s+=(l+c)*u}return i/=2,o/=6*i,s/=6*i,{x:o,y:s}}(t):function(e){const i=e.length;let o=0,s=0;for(let n=0;n<i;n++){const[a,d]=e[n];o+=a,s+=d}return{x:o/i,y:s/i}}(t)}class yi extends k{constructor(t,e,i,o){super(t),this.config=void 0,this.selectionPoints=void 0,this.midPoints=void 0,this.coordinatePoints=void 0,this.lastBearing=void 0,this.selectedGeometry=void 0,this.selectedGeometryCentroid=void 0,this.selectedGeometryWebMercatorCentroid=void 0,this.config=t,this.selectionPoints=e,this.midPoints=i,this.coordinatePoints=o}reset(){this.lastBearing=void 0,this.selectedGeometry=void 0,this.selectedGeometryWebMercatorCentroid=void 0,this.selectedGeometryCentroid=void 0}rotate(t,e,i){this.selectedGeometry||(this.selectedGeometry=this.store.getGeometryCopy(e));const o=this.selectedGeometry;if(o.type!=="Polygon"&&o.type!=="LineString")return;const s=[t.lng,t.lat];let n;const a={type:"Feature",geometry:o,properties:{}};if(this.config.projection==="web-mercator"){this.selectedGeometryWebMercatorCentroid||(this.selectedGeometryWebMercatorCentroid=kt(a));const u=S(t.lng,t.lat);if(n=Ae(this.selectedGeometryWebMercatorCentroid,u),n===0)return;if(!this.lastBearing)return void(this.lastBearing=n);((p,g)=>{if(g===0||g===360||g===-360)return p;const y=.017453292519943295*g,v=(p.geometry.type==="Polygon"?p.geometry.coordinates[0]:p.geometry.coordinates).map(([f,P])=>S(f,P)),m=v.reduce((f,P)=>({x:f.x+P.x,y:f.y+P.y}),{x:0,y:0});m.x/=v.length,m.y/=v.length;const C=v.map(f=>({x:m.x+(f.x-m.x)*Math.cos(y)-(f.y-m.y)*Math.sin(y),y:m.y+(f.x-m.x)*Math.sin(y)+(f.y-m.y)*Math.cos(y)})).map(({x:f,y:P})=>[ot(f,P).lng,ot(f,P).lat]);p.geometry.type==="Polygon"?p.geometry.coordinates[0]=C:p.geometry.coordinates=C})(a,-(this.lastBearing-n))}else{if(this.config.projection!=="globe")throw new Error("Unsupported projection");if(this.selectedGeometryCentroid||(this.selectedGeometryCentroid=oe({geometry:o})),n=_t(this.selectedGeometryCentroid,s),!this.lastBearing)return void(this.lastBearing=n+180);(function(u,p){if(p===0||p===360||p===-360)return u;const g=oe(u);(u.geometry.type==="Polygon"?u.geometry.coordinates[0]:u.geometry.coordinates).forEach(y=>{const v=_t(g,y)+p,m=function(f,P){f[0]+=f[0]-P[0]>180?-360:P[0]-f[0]>180?360:0;const x=ce,w=P[1]*Math.PI/180,F=f[1]*Math.PI/180,O=F-w;let B=Math.abs(f[0]-P[0])*Math.PI/180;B>Math.PI&&(B-=2*Math.PI);const D=Math.log(Math.tan(F/2+Math.PI/4)/Math.tan(w/2+Math.PI/4)),W=Math.abs(D)>1e-11?O/D:Math.cos(w);return Math.sqrt(O*O+W*W*B*B)*x}(g,y),C=me(g,m,v);y[0]=C[0],y[1]=C[1]})})(a,-(this.lastBearing-(n+180)))}const d=o.type==="Polygon"?o.coordinates[0]:o.coordinates;d.forEach(u=>{u[0]=b(u[0],this.coordinatePrecision),u[1]=b(u[1],this.coordinatePrecision)});const l=this.midPoints.getUpdated(d)||[],h=this.selectionPoints.getUpdated(d)||[],c=this.coordinatePoints.getUpdated(e,d)||[];if(i&&!i({id:e,type:"Feature",geometry:o,properties:{}},{project:this.config.project,unproject:this.config.unproject,coordinatePrecision:this.config.coordinatePrecision,updateType:I.Provisional}))return!1;this.store.updateGeometry([{id:e,geometry:o},...h,...l,...c]),this.projection==="web-mercator"?this.lastBearing=n:this.projection==="globe"&&(this.lastBearing=n+180)}}class fi extends k{constructor(t,e){super(t),this.config=void 0,this.dragCoordinateResizeBehavior=void 0,this.config=t,this.dragCoordinateResizeBehavior=e}scale(t,e,i){if(!this.dragCoordinateResizeBehavior.isDragging()){const o=this.dragCoordinateResizeBehavior.getDraggableIndex(t,e);this.dragCoordinateResizeBehavior.startDragging(e,o)}this.dragCoordinateResizeBehavior.drag(t,"center-fixed",i)}reset(){this.dragCoordinateResizeBehavior.stopDragging()}}class mi extends k{constructor(t,e,i,o,s){super(t),this.config=void 0,this.pixelDistance=void 0,this.selectionPoints=void 0,this.midPoints=void 0,this.coordinatePoints=void 0,this.minimumScale=1e-4,this.draggedCoordinate={id:null,index:-1},this.boundingBoxMaps={opposite:{0:4,1:5,2:6,3:7,4:0,5:1,6:2,7:3}},this.config=t,this.pixelDistance=e,this.selectionPoints=i,this.midPoints=o,this.coordinatePoints=s}getClosestCoordinate(t,e){const i={dist:1/0,index:-1,isFirstOrLastPolygonCoord:!1};let o;if(e.type==="LineString")o=e.coordinates;else{if(e.type!=="Polygon")return i;o=e.coordinates[0]}for(let s=0;s<o.length;s++){const n=this.pixelDistance.measure(t,o[s]);if(n<this.pointerDistance&&n<i.dist){const a=e.type==="Polygon"&&(s===o.length-1||s===0);i.dist=n,i.index=a?0:s,i.isFirstOrLastPolygonCoord=a}}return i}isValidDragWebMercator(t,e,i){switch(t){case 0:if(e<=0||i>=0)return!1;break;case 1:if(i>=0)return!1;break;case 2:if(e>=0||i>=0)return!1;break;case 3:if(e>=0)return!1;break;case 4:if(e>=0||i<=0)return!1;break;case 5:if(i<=0)return!1;break;case 6:if(e<=0||i<=0)return!1;break;case 7:if(e<=0)return!1}return!0}getSelectedFeatureDataWebMercator(){if(!this.draggedCoordinate.id||this.draggedCoordinate.index===-1)return null;const t=this.getFeature(this.draggedCoordinate.id);if(!t)return null;const e=this.getNormalisedCoordinates(t.geometry);return{boundingBox:this.getBBoxWebMercator(e),feature:t,updatedCoords:e,selectedCoordinate:e[this.draggedCoordinate.index]}}centerWebMercatorDrag(t){const e=this.getSelectedFeatureDataWebMercator();if(!e)return null;const{feature:i,boundingBox:o,updatedCoords:s,selectedCoordinate:n}=e,a=kt(i);if(!a)return null;const d=S(n[0],n[1]),{closestBBoxIndex:l}=this.getIndexesWebMercator(o,d),h=S(t.lng,t.lat);return this.scaleWebMercator({closestBBoxIndex:l,updatedCoords:s,webMercatorCursor:h,webMercatorSelected:d,webMercatorOrigin:a}),s}centerFixedWebMercatorDrag(t){const e=this.getSelectedFeatureDataWebMercator();if(!e)return null;const{feature:i,boundingBox:o,updatedCoords:s,selectedCoordinate:n}=e,a=kt(i);if(!a)return null;const d=S(n[0],n[1]),{closestBBoxIndex:l}=this.getIndexesWebMercator(o,d),h=S(t.lng,t.lat);return this.scaleFixedWebMercator({closestBBoxIndex:l,updatedCoords:s,webMercatorCursor:h,webMercatorSelected:d,webMercatorOrigin:a}),s}scaleFixedWebMercator({closestBBoxIndex:t,webMercatorOrigin:e,webMercatorSelected:i,webMercatorCursor:o,updatedCoords:s}){if(!this.isValidDragWebMercator(t,e.x-o.x,e.y-o.y))return null;let n=G(e,o)/G(e,i);return n<0&&(n=this.minimumScale),this.performWebMercatorScale(s,e.x,e.y,n,n),s}oppositeFixedWebMercatorDrag(t){const e=this.getSelectedFeatureDataWebMercator();if(!e)return null;const{boundingBox:i,updatedCoords:o,selectedCoordinate:s}=e,n=S(s[0],s[1]),{oppositeBboxIndex:a,closestBBoxIndex:d}=this.getIndexesWebMercator(i,n),l={x:i[a][0],y:i[a][1]},h=S(t.lng,t.lat);return this.scaleFixedWebMercator({closestBBoxIndex:d,updatedCoords:o,webMercatorCursor:h,webMercatorSelected:n,webMercatorOrigin:l}),o}oppositeWebMercatorDrag(t){const e=this.getSelectedFeatureDataWebMercator();if(!e)return null;const{boundingBox:i,updatedCoords:o,selectedCoordinate:s}=e,n=S(s[0],s[1]),{oppositeBboxIndex:a,closestBBoxIndex:d}=this.getIndexesWebMercator(i,n),l={x:i[a][0],y:i[a][1]},h=S(t.lng,t.lat);return this.scaleWebMercator({closestBBoxIndex:d,updatedCoords:o,webMercatorCursor:h,webMercatorSelected:n,webMercatorOrigin:l}),o}scaleWebMercator({closestBBoxIndex:t,webMercatorOrigin:e,webMercatorSelected:i,webMercatorCursor:o,updatedCoords:s}){const n=e.x-o.x,a=e.y-o.y;if(!this.isValidDragWebMercator(t,n,a))return null;let d=1;n!==0&&t!==1&&t!==5&&(d=1-(e.x-i.x-n)/n);let l=1;return a!==0&&t!==3&&t!==7&&(l=1-(e.y-i.y-a)/a),this.validateScale(d,l)?(d<0&&(d=this.minimumScale),l<0&&(l=this.minimumScale),this.performWebMercatorScale(s,e.x,e.y,d,l),s):null}getFeature(t){if(this.draggedCoordinate.id===null)return null;const e=this.store.getGeometryCopy(t);return e.type!=="Polygon"&&e.type!=="LineString"?null:{id:t,type:"Feature",geometry:e,properties:{}}}getNormalisedCoordinates(t){return t.type==="Polygon"?t.coordinates[0]:t.coordinates}validateScale(t,e){const i=!isNaN(t)&&e<Number.MAX_SAFE_INTEGER,o=!isNaN(e)&&e<Number.MAX_SAFE_INTEGER;return i&&o}performWebMercatorScale(t,e,i,o,s){t.forEach(n=>{const{x:a,y:d}=S(n[0],n[1]),l=e+(a-e)*o,h=i+(d-i)*s,{lng:c,lat:u}=ot(l,h);n[0]=c,n[1]=u})}getBBoxWebMercator(t){const e=[1/0,1/0,-1/0,-1/0];(t=t.map(a=>{const{x:d,y:l}=S(a[0],a[1]);return[d,l]})).forEach(([a,d])=>{a<e[0]&&(e[0]=a),d<e[1]&&(e[1]=d),a>e[2]&&(e[2]=a),d>e[3]&&(e[3]=d)});const[i,o,s,n]=e;return[[i,n],[(i+s)/2,n],[s,n],[s,n+(o-n)/2],[s,o],[(i+s)/2,o],[i,o],[i,n+(o-n)/2]]}getIndexesWebMercator(t,e){let i,o=1/0;for(let s=0;s<t.length;s++){const n=G({x:e.x,y:e.y},{x:t[s][0],y:t[s][1]});n<o&&(i=s,o=n)}if(i===void 0)throw new Error("No closest coordinate found");return{oppositeBboxIndex:this.boundingBoxMaps.opposite[i],closestBBoxIndex:i}}isDragging(){return this.draggedCoordinate.id!==null}startDragging(t,e){this.draggedCoordinate={id:t,index:e}}stopDragging(){this.draggedCoordinate={id:null,index:-1}}getDraggableIndex(t,e){const i=this.store.getGeometryCopy(e),o=this.getClosestCoordinate(t,i);return o.index===-1?-1:o.index}drag(t,e,i){if(!this.draggedCoordinate.id)return!1;const o=this.getFeature(this.draggedCoordinate.id);if(!o)return!1;let s=null;if(e==="center"?s=this.centerWebMercatorDrag(t):e==="opposite"?s=this.oppositeWebMercatorDrag(t):e==="center-fixed"?s=this.centerFixedWebMercatorDrag(t):e==="opposite-fixed"&&(s=this.oppositeFixedWebMercatorDrag(t)),!s)return!1;for(let h=0;h<s.length;h++){const c=s[h];if(c[0]=b(c[0],this.coordinatePrecision),c[1]=b(c[1],this.coordinatePrecision),!Pt(c,this.coordinatePrecision))return!1}const n=this.midPoints.getUpdated(s)||[],a=this.selectionPoints.getUpdated(s)||[],d=this.coordinatePoints.getUpdated(o.id,s)||[],l={type:o.geometry.type,coordinates:o.geometry.type==="Polygon"?[s]:s};return!(i&&!i({id:this.draggedCoordinate.id,type:"Feature",geometry:l,properties:{}},{project:this.config.project,unproject:this.config.unproject,coordinatePrecision:this.config.coordinatePrecision,updateType:I.Provisional}).valid||(this.store.updateGeometry([{id:this.draggedCoordinate.id,geometry:l},...a,...n,...d]),0))}}const vi={deselect:"Escape",delete:"Delete",rotate:["Control","r"],scale:["Control","s"]},se={pointerOver:"move",dragStart:"move",dragEnd:"move",insertMidpoint:"crosshair"};class Ci extends Fe{constructor(t){super(t,!0),this.mode="select",this.allowManualDeselection=!0,this.dragEventThrottle=5,this.dragEventCount=0,this.selected=[],this.flags={},this.keyEvents=vi,this.cursors=se,this.validations={},this.selectionPoints=void 0,this.midPoints=void 0,this.coordinateSnap=void 0,this.featuresAtMouseEvent=void 0,this.pixelDistance=void 0,this.clickBoundingBox=void 0,this.dragFeature=void 0,this.dragCoordinate=void 0,this.rotateFeature=void 0,this.scaleFeature=void 0,this.dragCoordinateResizeFeature=void 0,this.coordinatePoints=void 0,this.lineSnap=void 0,this.updateOptions(t)}updateOptions(t){if(super.updateOptions(t),this.cursors=t&&t.cursors?M({},this.cursors,t.cursors):se,(t==null?void 0:t.keyEvents)===null?this.keyEvents={deselect:null,delete:null,rotate:null,scale:null}:t!=null&&t.keyEvents&&(this.keyEvents=M({},this.keyEvents,t.keyEvents)),(t==null?void 0:t.dragEventThrottle)!==void 0&&(this.dragEventThrottle=t.dragEventThrottle),(t==null?void 0:t.allowManualDeselection)!==void 0&&(this.allowManualDeselection=t.allowManualDeselection),t!=null&&t.flags){this.flags=M({},this.flags,t.flags),this.validations={};for(const e in this.flags){const i=this.flags[e].feature;i&&i.validation&&(this.validations[e]=i.validation)}}}selectFeature(t){this.select(t,!1)}setSelecting(){if(this._state!=="started")throw new Error("Mode must be started to move to selecting state");this._state="selecting"}registerBehaviors(t){this.pixelDistance=new ht(t),this.clickBoundingBox=new lt(t),this.featuresAtMouseEvent=new ui(t,this.clickBoundingBox,this.pixelDistance),this.selectionPoints=new ci(t),this.coordinatePoints=new fe(t),this.midPoints=new hi(t,this.selectionPoints,this.coordinatePoints),this.coordinateSnap=new Ct(t,this.pixelDistance,this.clickBoundingBox),this.lineSnap=new Wt(t,this.pixelDistance,this.clickBoundingBox),this.rotateFeature=new yi(t,this.selectionPoints,this.midPoints,this.coordinatePoints),this.dragFeature=new pi(t,this.featuresAtMouseEvent,this.selectionPoints,this.midPoints,this.coordinatePoints),this.dragCoordinate=new gi(t,this.pixelDistance,this.selectionPoints,this.midPoints,this.coordinatePoints,this.coordinateSnap,this.lineSnap),this.dragCoordinateResizeFeature=new mi(t,this.pixelDistance,this.selectionPoints,this.midPoints,this.coordinatePoints),this.scaleFeature=new fi(t,this.dragCoordinateResizeFeature)}deselectFeature(){this.deselect()}deselect(){const t=this.selected.filter(e=>this.store.has(e)).map(e=>({id:e,property:L.SELECTED,value:!1}));this.store.updateProperty(t),this.onDeselect(this.selected[0]),this.selected=[],this.selectionPoints.delete(),this.midPoints.delete()}deleteSelected(){this.store.delete(this.selected),this.selected=[]}onRightClick(t){if(!this.selectionPoints.ids.length)return;let e,i=1/0;if(this.selectionPoints.ids.forEach(u=>{const p=this.store.getGeometryCopy(u),g=this.pixelDistance.measure(t,p.coordinates);g<this.pointerDistance&&g<i&&(i=g,e=this.store.getPropertiesCopy(u))}),!e)return;const o=e.selectionPointFeatureId,s=e.index,n=this.store.getPropertiesCopy(o),a=this.flags[n.mode],d=this.validations[n.mode];if(!(a&&a.feature&&a.feature.coordinates&&a.feature.coordinates.deletable))return;const l=this.store.getGeometryCopy(o);let h;if(l.type==="Polygon"){if(h=l.coordinates[0],h.length<=4)return}else if(l.type==="LineString"&&(h=l.coordinates,h.length<=2))return;if(!h||(l.type!=="Polygon"||s!==0&&s!==h.length-1?h.splice(s,1):(h.shift(),h.pop(),h.push([h[0][0],h[0][1]])),d&&!d({id:o,type:"Feature",geometry:l,properties:n},{project:this.project,unproject:this.unproject,coordinatePrecision:this.coordinatePrecision,updateType:I.Commit}).valid))return;const c=[...this.midPoints.ids,...this.selectionPoints.ids];this.store.delete(c),this.store.updateGeometry([{id:o,geometry:l}]),n.coordinatePointIds&&this.coordinatePoints.createOrUpdate(o),this.selectionPoints.create(h,l.type,o),a&&a.feature&&a.feature.coordinates&&a.feature.coordinates.midpoints&&this.midPoints.create(h,o,this.coordinatePrecision)}select(t,e=!0){if(this.selected[0]===t)return;const{mode:i}=this.store.getPropertiesCopy(t),o=this.flags[i];if(!o||!o.feature)return;const s=this.selected[0];if(s){if(s===t)return;this.deselect()}e&&this.setCursor(this.cursors.pointerOver),this.selected=[t],this.store.updateProperty([{id:t,property:L.SELECTED,value:!0}]),this.onSelect(t);const{type:n,coordinates:a}=this.store.getGeometryCopy(t);if(n!=="LineString"&&n!=="Polygon")return;const d=n==="LineString"?a:a[0];d&&o&&o.feature.coordinates&&(this.selectionPoints.create(d,n,t),o.feature.coordinates.midpoints&&this.midPoints.create(d,t,this.coordinatePrecision))}onLeftClick(t){const{clickedFeature:e,clickedMidPoint:i}=this.featuresAtMouseEvent.find(t,this.selected.length>0);if(this.selected.length&&i)this.midPoints.insert(this.selected[0],i.id,this.coordinatePrecision);else if(e&&e.id)this.select(e.id,!0);else if(this.selected.length&&this.allowManualDeselection)return void this.deselect()}start(){this.setStarted(),this.setSelecting()}stop(){this.cleanUp(),this.setStarted(),this.setStopped()}onClick(t){t.button==="right"&&this.allowPointerEvent(this.pointerEvents.rightClick,t)||t.isContextMenu&&this.allowPointerEvent(this.pointerEvents.contextMenu,t)?this.onRightClick(t):t.button==="left"&&this.allowPointerEvent(this.pointerEvents.leftClick,t)&&this.onLeftClick(t)}canScale(t){return this.keyEvents.scale&&this.keyEvents.scale.every(e=>t.heldKeys.includes(e))}canRotate(t){return this.keyEvents.rotate&&this.keyEvents.rotate.every(e=>t.heldKeys.includes(e))}preventDefaultKeyEvent(t){const e=this.canRotate(t),i=this.canScale(t);(e||i)&&t.preventDefault()}onKeyDown(t){this.preventDefaultKeyEvent(t)}onKeyUp(t){if(this.preventDefaultKeyEvent(t),this.keyEvents.delete&&t.key===this.keyEvents.delete){if(!this.selected.length)return;const e=this.selected[0];this.onDeselect(this.selected[0]),this.coordinatePoints.deletePointsByFeatureIds([e]),this.deleteSelected(),this.selectionPoints.delete(),this.midPoints.delete()}else this.keyEvents.deselect&&t.key===this.keyEvents.deselect&&this.cleanUp()}cleanUp(){this.selected.length&&this.deselect()}onDragStart(t,e){if(!this.allowPointerEvent(this.pointerEvents.onDragStart,t)||!this.selected.length)return;const i=this.store.getPropertiesCopy(this.selected[0]),o=this.flags[i.mode];if(!(o&&o.feature&&(o.feature.draggable||o.feature.coordinates&&o.feature.coordinates.draggable||o.feature.coordinates&&o.feature.coordinates.resizable||o.feature.coordinates&&typeof o.feature.coordinates.midpoints=="object"&&o.feature.coordinates.midpoints.draggable)))return;this.dragEventCount=0;const s=this.selected[0],n=this.dragCoordinate.getDraggableIndex(t,s);if(o&&o.feature&&o.feature.coordinates&&(o.feature.coordinates.draggable||o.feature.coordinates.resizable)&&n!==-1)return this.setCursor(this.cursors.dragStart),o.feature.coordinates.resizable?this.dragCoordinateResizeFeature.startDragging(s,n):this.dragCoordinate.startDragging(s,n),void e(!1);if(o&&o.feature&&o.feature.coordinates&&typeof o.feature.coordinates.midpoints=="object"&&o.feature.coordinates.midpoints.draggable){const{clickedMidPoint:a}=this.featuresAtMouseEvent.find(t,this.selected.length>0);if(this.selected.length&&a){this.midPoints.insert(s,a.id,this.coordinatePrecision);const d=this.dragCoordinate.getDraggableIndex(t,s);return this.dragCoordinate.startDragging(s,d),void e(!1)}}return o&&o.feature&&o.feature.draggable&&this.dragFeature.canDrag(t,s)?(this.setCursor(this.cursors.dragStart),this.dragFeature.startDragging(t,s),void e(!1)):void 0}onDrag(t,e){if(!this.allowPointerEvent(this.pointerEvents.onDrag,t))return;const i=this.selected[0];if(!i)return;const o=this.store.getPropertiesCopy(i),s=this.flags[o.mode],n=(s&&s.feature&&s.feature.selfIntersectable)===!0;if(this.dragEventCount++,this.dragEventCount%this.dragEventThrottle==0)return;const a=this.validations[o.mode];if(s&&s.feature&&s.feature.rotateable&&this.canRotate(t))return e(!1),void this.rotateFeature.rotate(t,i,a);if(s&&s.feature&&s.feature.scaleable&&this.canScale(t))return e(!1),void this.scaleFeature.scale(t,i,a);if(this.dragCoordinateResizeFeature.isDragging()&&s.feature&&s.feature.coordinates&&s.feature.coordinates.resizable){if(this.projection==="globe")throw new Error("Globe is currently unsupported projection for resizable");return e(!1),void this.dragCoordinateResizeFeature.drag(t,s.feature.coordinates.resizable,a)}if(this.dragCoordinate.isDragging()){var d;const l=(d=s.feature)==null||(d=d.coordinates)==null?void 0:d.snappable;let h={toCoordinate:!1};return l===!0?h={toCoordinate:!0}:typeof l=="object"&&(h=l),void this.dragCoordinate.drag(t,n,a,h)}this.dragFeature.isDragging()?this.dragFeature.drag(t,a):e(!0)}onDragEnd(t,e){this.allowPointerEvent(this.pointerEvents.onDragEnd,t)&&(this.setCursor(this.cursors.dragEnd),this.dragCoordinate.isDragging()?this.onFinish(this.selected[0],{mode:this.mode,action:"dragCoordinate"}):this.dragFeature.isDragging()?this.onFinish(this.selected[0],{mode:this.mode,action:"dragFeature"}):this.dragCoordinateResizeFeature.isDragging()&&this.onFinish(this.selected[0],{mode:this.mode,action:"dragCoordinateResize"}),this.dragCoordinate.stopDragging(),this.dragFeature.stopDragging(),this.dragCoordinateResizeFeature.stopDragging(),this.rotateFeature.reset(),this.scaleFeature.reset(),e(!0))}onMouseMove(t){if(!this.selected.length)return void this.setCursor("unset");if(this.dragFeature.isDragging())return;let e=!1;this.midPoints.ids.forEach(s=>{if(e)return;const n=this.store.getGeometryCopy(s);this.pixelDistance.measure(t,n.coordinates)<this.pointerDistance&&(e=!0)});let i=!1;if(this.selectionPoints.ids.forEach(s=>{const n=this.store.getGeometryCopy(s);this.pixelDistance.measure(t,n.coordinates)<this.pointerDistance&&(e=!1,i=!0)}),e)return void this.setCursor(this.cursors.insertMidpoint);const{clickedFeature:o}=this.featuresAtMouseEvent.find(t,!0);this.setCursor(this.selected.length>0&&(o&&o.id===this.selected[0]||i)?this.cursors.pointerOver:"unset")}styleFeature(t){const e=M({},{polygonFillColor:"#3f97e0",polygonOutlineColor:"#3f97e0",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:"#3f97e0",pointOutlineColor:"#ffffff",pointOutlineWidth:0,pointWidth:6,lineStringColor:"#3f97e0",lineStringWidth:4,zIndex:0});if(t.properties.mode===this.mode&&t.geometry.type==="Point"){if(t.properties.selectionPoint)return e.pointColor=this.getHexColorStylingValue(this.styles.selectionPointColor,e.pointColor,t),e.pointOutlineColor=this.getHexColorStylingValue(this.styles.selectionPointOutlineColor,e.pointOutlineColor,t),e.pointWidth=this.getNumericStylingValue(this.styles.selectionPointWidth,e.pointWidth,t),e.pointOutlineWidth=this.getNumericStylingValue(this.styles.selectionPointOutlineWidth,2,t),e.zIndex=30,e;if(t.properties.midPoint)return e.pointColor=this.getHexColorStylingValue(this.styles.midPointColor,e.pointColor,t),e.pointOutlineColor=this.getHexColorStylingValue(this.styles.midPointOutlineColor,e.pointOutlineColor,t),e.pointWidth=this.getNumericStylingValue(this.styles.midPointWidth,4,t),e.pointOutlineWidth=this.getNumericStylingValue(this.styles.midPointOutlineWidth,2,t),e.zIndex=50,e}else if(t.properties[L.SELECTED]){if(t.geometry.type==="Polygon")return e.polygonFillColor=this.getHexColorStylingValue(this.styles.selectedPolygonColor,e.polygonFillColor,t),e.polygonOutlineWidth=this.getNumericStylingValue(this.styles.selectedPolygonOutlineWidth,e.polygonOutlineWidth,t),e.polygonOutlineColor=this.getHexColorStylingValue(this.styles.selectedPolygonOutlineColor,e.polygonOutlineColor,t),e.polygonFillOpacity=this.getNumericStylingValue(this.styles.selectedPolygonFillOpacity,e.polygonFillOpacity,t),e.zIndex=U,e;if(t.geometry.type==="LineString")return e.lineStringColor=this.getHexColorStylingValue(this.styles.selectedLineStringColor,e.lineStringColor,t),e.lineStringWidth=this.getNumericStylingValue(this.styles.selectedLineStringWidth,e.lineStringWidth,t),e.zIndex=U,e;if(t.geometry.type==="Point")return e.pointWidth=this.getNumericStylingValue(this.styles.selectedPointWidth,e.pointWidth,t),e.pointColor=this.getHexColorStylingValue(this.styles.selectedPointColor,e.pointColor,t),e.pointOutlineColor=this.getHexColorStylingValue(this.styles.selectedPointOutlineColor,e.pointOutlineColor,t),e.pointOutlineWidth=this.getNumericStylingValue(this.styles.selectedPointOutlineWidth,e.pointOutlineWidth,t),e.zIndex=U,e}return e}}class Pi extends z{constructor(...t){super(...t),this.type=it.Static,this.mode="static"}start(){}stop(){}onKeyUp(){}onKeyDown(){}onClick(){}onDragStart(){}onDrag(){}onDragEnd(){}onMouseMove(){}cleanUp(){}styleFeature(){return M({},{polygonFillColor:"#3f97e0",polygonOutlineColor:"#3f97e0",polygonOutlineWidth:4,polygonFillOpacity:.3,pointColor:"#3f97e0",pointOutlineColor:"#ffffff",pointOutlineWidth:0,pointWidth:6,lineStringColor:"#3f97e0",lineStringWidth:4,zIndex:0})}}function Ce(r,t,e,i,o){for(;i>e;){if(i-e>600){const d=i-e+1,l=t-e+1,h=Math.log(d),c=.5*Math.exp(2*h/3),u=.5*Math.sqrt(h*c*(d-c)/d)*(l-d/2<0?-1:1);Ce(r,t,Math.max(e,Math.floor(t-l*c/d+u)),Math.min(i,Math.floor(t+(d-l)*c/d+u)),o)}const s=r[t];let n=e,a=i;for(st(r,e,t),o(r[i],s)>0&&st(r,e,i);n<a;){for(st(r,n,a),n++,a--;o(r[n],s)<0;)n++;for(;o(r[a],s)>0;)a--}o(r[e],s)===0?st(r,e,a):(a++,st(r,a,i)),a<=t&&(e=a+1),t<=a&&(i=a-1)}}function st(r,t,e){const i=r[t];r[t]=r[e],r[e]=i}function q(r,t){rt(r,0,r.children.length,t,r)}function rt(r,t,e,i,o){o||(o=Q([])),o.minX=1/0,o.minY=1/0,o.maxX=-1/0,o.maxY=-1/0;for(let s=t;s<e;s++){const n=r.children[s];at(o,r.leaf?i(n):n)}return o}function at(r,t){return r.minX=Math.min(r.minX,t.minX),r.minY=Math.min(r.minY,t.minY),r.maxX=Math.max(r.maxX,t.maxX),r.maxY=Math.max(r.maxY,t.maxY),r}function Ii(r,t){return r.minX-t.minX}function xi(r,t){return r.minY-t.minY}function Mt(r){return(r.maxX-r.minX)*(r.maxY-r.minY)}function pt(r){return r.maxX-r.minX+(r.maxY-r.minY)}function Ei(r,t){const e=Math.max(r.minX,t.minX),i=Math.max(r.minY,t.minY),o=Math.min(r.maxX,t.maxX),s=Math.min(r.maxY,t.maxY);return Math.max(0,o-e)*Math.max(0,s-i)}function St(r,t){return r.minX<=t.minX&&r.minY<=t.minY&&t.maxX<=r.maxX&&t.maxY<=r.maxY}function gt(r,t){return t.minX<=r.maxX&&t.minY<=r.maxY&&t.maxX>=r.minX&&t.maxY>=r.minY}function Q(r){return{children:r,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function ne(r,t,e,i,o){const s=[t,e];for(;s.length;){if((e=s.pop())-(t=s.pop())<=i)continue;const n=t+Math.ceil((e-t)/i/2)*i;Ce(r,n,t,e,o),s.push(t,n,n,e)}}class Mi{constructor(t){this._maxEntries=void 0,this._minEntries=void 0,this.data=void 0,this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()}search(t){let e=this.data;const i=[];if(!gt(t,e))return i;const o=this.toBBox,s=[];for(;e;){for(let n=0;n<e.children.length;n++){const a=e.children[n],d=e.leaf?o(a):a;gt(t,d)&&(e.leaf?i.push(a):St(t,d)?this._all(a,i):s.push(a))}e=s.pop()}return i}collides(t){let e=this.data;if(gt(t,e)){const i=[];for(;e;){for(let o=0;o<e.children.length;o++){const s=e.children[o],n=e.leaf?this.toBBox(s):s;if(gt(t,n)){if(e.leaf||St(t,n))return!0;i.push(s)}}e=i.pop()}}return!1}load(t){if(t.length<this._minEntries){for(let i=0;i<t.length;i++)this.insert(t[i]);return}let e=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===e.height)this._splitRoot(this.data,e);else{if(this.data.height<e.height){const i=this.data;this.data=e,e=i}this._insert(e,this.data.height-e.height-1,!0)}else this.data=e}insert(t){this._insert(t,this.data.height-1)}clear(){this.data=Q([])}remove(t){let e=this.data;const i=this.toBBox(t),o=[],s=[];let n,a,d=!1;for(;e||o.length;){if(e||(e=o.pop(),a=o[o.length-1],n=s.pop(),d=!0),e.leaf){const l=e.children.indexOf(t);l!==-1&&(e.children.splice(l,1),o.push(e),this._condense(o))}d||e.leaf||!St(e,i)?a?(n++,e=a.children[n],d=!1):e=null:(o.push(e),s.push(n),n=0,a=e,e=e.children[0])}}toBBox(t){return t}compareMinX(t,e){return t.minX-e.minX}compareMinY(t,e){return t.minY-e.minY}_all(t,e){const i=[];for(;t;)t.leaf?e.push(...t.children):i.push(...t.children),t=i.pop();return e}_build(t,e,i,o){const s=i-e+1;let n,a=this._maxEntries;if(s<=a)return n=Q(t.slice(e,i+1)),q(n,this.toBBox),n;o||(o=Math.ceil(Math.log(s)/Math.log(a)),a=Math.ceil(s/Math.pow(a,o-1))),n=Q([]),n.leaf=!1,n.height=o;const d=Math.ceil(s/a),l=d*Math.ceil(Math.sqrt(a));ne(t,e,i,l,this.compareMinX);for(let h=e;h<=i;h+=l){const c=Math.min(h+l-1,i);ne(t,h,c,d,this.compareMinY);for(let u=h;u<=c;u+=d){const p=Math.min(u+d-1,c);n.children.push(this._build(t,u,p,o-1))}}return q(n,this.toBBox),n}_chooseSubtree(t,e,i,o){for(;o.push(e),!e.leaf&&o.length-1!==i;){let a,d=1/0,l=1/0;for(let h=0;h<e.children.length;h++){const c=e.children[h],u=Mt(c),p=(s=t,n=c,(Math.max(n.maxX,s.maxX)-Math.min(n.minX,s.minX))*(Math.max(n.maxY,s.maxY)-Math.min(n.minY,s.minY))-u);p<l?(l=p,d=u<d?u:d,a=c):p===l&&u<d&&(d=u,a=c)}e=a||e.children[0]}var s,n;return e}_insert(t,e,i){const o=i?t:this.toBBox(t),s=[],n=this._chooseSubtree(o,this.data,e,s);for(n.children.push(t),at(n,o);e>=0&&s[e].children.length>this._maxEntries;)this._split(s,e),e--;this._adjustParentBBoxes(o,s,e)}_split(t,e){const i=t[e],o=i.children.length,s=this._minEntries;this._chooseSplitAxis(i,s,o);const n=this._chooseSplitIndex(i,s,o),a=Q(i.children.splice(n,i.children.length-n));a.height=i.height,a.leaf=i.leaf,q(i,this.toBBox),q(a,this.toBBox),e?t[e-1].children.push(a):this._splitRoot(i,a)}_splitRoot(t,e){this.data=Q([t,e]),this.data.height=t.height+1,this.data.leaf=!1,q(this.data,this.toBBox)}_chooseSplitIndex(t,e,i){let o,s=1/0,n=1/0;for(let a=e;a<=i-e;a++){const d=rt(t,0,a,this.toBBox),l=rt(t,a,i,this.toBBox),h=Ei(d,l),c=Mt(d)+Mt(l);h<s?(s=h,o=a,n=c<n?c:n):h===s&&c<n&&(n=c,o=a)}return o||i-e}_chooseSplitAxis(t,e,i){const o=t.leaf?this.compareMinX:Ii,s=t.leaf?this.compareMinY:xi;this._allDistMargin(t,e,i,o)<this._allDistMargin(t,e,i,s)&&t.children.sort(o)}_allDistMargin(t,e,i,o){t.children.sort(o);const s=this.toBBox,n=rt(t,0,e,s),a=rt(t,i-e,i,s);let d=pt(n)+pt(a);for(let l=e;l<i-e;l++){const h=t.children[l];at(n,t.leaf?s(h):h),d+=pt(n)}for(let l=i-e-1;l>=e;l--){const h=t.children[l];at(a,t.leaf?s(h):h),d+=pt(a)}return d}_adjustParentBBoxes(t,e,i){for(let o=i;o>=0;o--)at(e[o],t)}_condense(t){for(let e,i=t.length-1;i>=0;i--)t[i].children.length===0?i>0?(e=t[i-1].children,e.splice(e.indexOf(t[i]),1)):this.clear():q(t[i],this.toBBox)}}class Si{constructor(t){this.tree=void 0,this.idToNode=void 0,this.nodeToId=void 0,this.tree=new Mi(t&&t.maxEntries?t.maxEntries:9),this.idToNode=new Map,this.nodeToId=new Map}setMaps(t,e){this.idToNode.set(t.id,e),this.nodeToId.set(e,t.id)}toBBox(t){const e=[],i=[];let o;if(t.geometry.type==="Polygon")o=t.geometry.coordinates[0];else if(t.geometry.type==="LineString")o=t.geometry.coordinates;else{if(t.geometry.type!=="Point")throw new Error("Not a valid feature to turn into a bounding box");o=[t.geometry.coordinates]}for(let a=0;a<o.length;a++)i.push(o[a][1]),e.push(o[a][0]);const s=Math.min(...i),n=Math.max(...i);return{minX:Math.min(...e),minY:s,maxX:Math.max(...e),maxY:n}}insert(t){if(this.idToNode.get(String(t.id)))throw new Error("Feature already exists");const e=this.toBBox(t);this.setMaps(t,e),this.tree.insert(e)}load(t){const e=[],i=new Set;t.forEach(o=>{const s=this.toBBox(o);if(this.setMaps(o,s),i.has(String(o.id)))throw new Error(`Duplicate feature ID found ${o.id}`);i.add(String(o.id)),e.push(s)}),this.tree.load(e)}update(t){this.remove(t.id);const e=this.toBBox(t);this.setMaps(t,e),this.tree.insert(e)}remove(t){const e=this.idToNode.get(t);if(!e)throw new Error(`${t} not inserted into the spatial index`);this.tree.remove(e)}clear(){this.tree.clear()}search(t){return this.tree.search(this.toBBox(t)).map(e=>this.nodeToId.get(e))}collides(t){return this.tree.collides(this.toBBox(t))}}const bi={getId:()=>"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(r){const t=16*Math.random()|0;return(r=="x"?t:3&t|8).toString(16)}),isValidId:r=>typeof r=="string"&&r.length===36};class wi{constructor(t){this.idStrategy=void 0,this.tracked=void 0,this.spatialIndex=void 0,this.store=void 0,this._onChange=()=>{},this.store={},this.spatialIndex=new Si,this.tracked=!t||t.tracked!==!1,this.idStrategy=t&&t.idStrategy?t.idStrategy:bi}clone(t){return JSON.parse(JSON.stringify(t))}getId(){return this.idStrategy.getId()}has(t){return!!this.store[t]}load(t,e,i,o){if(t.length===0)return[];let s=this.clone(t);const n=[],a=[];return s=s.filter(d=>{d.id==null&&(d.id=this.idStrategy.getId());const l=d.id;if(e){const h=e(d);if(!h.valid)return a.push({id:l,valid:!1,reason:h.reason}),!1}if(this.tracked){if(d.properties.createdAt){if(!Yt(d.properties.createdAt))return a.push({id:d.id,valid:!1,reason:"createdAt is not a valid numeric timestamp"}),!1}else d.properties.createdAt=+new Date;if(d.properties.updatedAt){if(!Yt(d.properties.updatedAt))return a.push({id:d.id,valid:!1,reason:"updatedAt is not a valid numeric timestamp"}),!1}else d.properties.updatedAt=+new Date}return this.has(l)?(a.push({id:l,valid:!1,reason:`Feature already exists with this id: ${l}`}),!1):(this.store[l]=d,n.push(l),i&&i(d),a.push({id:l,valid:!0}),!0)}),this.spatialIndex.load(s),n.length>0&&this._onChange(n,"create",o),a}search(t,e){const i=this.spatialIndex.search(t).map(o=>this.store[o]);return this.clone(e?i.filter(e):i)}registerOnChange(t){this._onChange=(e,i,o)=>{t(e,i,o)}}getGeometryCopy(t){const e=this.store[t];if(!e)throw new Error(`No feature with this id (${t}), can not get geometry copy`);return this.clone(e.geometry)}getPropertiesCopy(t){const e=this.store[t];if(!e)throw new Error(`No feature with this id (${t}), can not get properties copy`);return this.clone(e.properties)}updateProperty(t,e){const i=[];t.forEach(({id:o,property:s,value:n})=>{const a=this.store[o];if(!a)throw new Error(`No feature with this (${o}), can not update geometry`);i.push(o),n===void 0?delete a.properties[s]:a.properties[s]=n,this.tracked&&(a.properties.updatedAt=+new Date)}),this._onChange&&this._onChange(i,"update",e)}updateGeometry(t,e){const i=[];t.forEach(({id:o,geometry:s})=>{i.push(o);const n=this.store[o];if(!n)throw new Error(`No feature with this (${o}), can not update geometry`);n.geometry=this.clone(s),this.spatialIndex.update(n),this.tracked&&(n.properties.updatedAt=+new Date)}),this._onChange&&this._onChange(i,"update",e)}create(t,e){const i=[];return t.forEach(({geometry:o,properties:s})=>{let n,a=M({},s);this.tracked&&(n=+new Date,s?(a.createdAt=typeof s.createdAt=="number"?s.createdAt:n,a.updatedAt=typeof s.updatedAt=="number"?s.updatedAt:n):a={createdAt:n,updatedAt:n});const d=this.getId(),l={id:d,type:"Feature",geometry:o,properties:a};this.store[d]=l,this.spatialIndex.insert(l),i.push(d)}),this._onChange&&this._onChange([...i],"create",e),i}delete(t,e){t.forEach(i=>{if(!this.store[i])throw new Error(`No feature with id ${i}, can not delete`);delete this.store[i],this.spatialIndex.remove(i)}),this._onChange&&this._onChange([...t],"delete",e)}copy(t){return this.clone(this.store[t])}copyAll(){return this.clone(Object.keys(this.store).map(t=>this.store[t]))}copyAllWhere(t){return this.clone(Object.keys(this.store).map(e=>this.store[e]).filter(e=>e.properties&&t(e.properties)))}clear(){this.store={},this.spatialIndex.clear()}size(){return Object.keys(this.store).length}}class Fi{constructor(t){this._modes=void 0,this._mode=void 0,this._adapter=void 0,this._enabled=!1,this._store=void 0,this._eventListeners=void 0,this._instanceSelectMode=void 0,this._adapter=t.adapter,this._mode=new Pi;const e=new Set,i=t.modes.reduce((h,c)=>{if(e.has(c.mode))throw new Error(`There is already a ${c.mode} mode provided`);return e.add(c.mode),h[c.mode]=c,h},{}),o=Object.keys(i);if(o.length===0)throw new Error("No modes provided");o.forEach(h=>{if(i[h].type===it.Select){if(this._instanceSelectMode)throw new Error("only one type of select mode can be provided");this._instanceSelectMode=h}}),this._modes=M({},i,{static:this._mode}),this._eventListeners={change:[],select:[],deselect:[],finish:[],ready:[]},this._store=new wi({tracked:!!t.tracked,idStrategy:t.idStrategy?t.idStrategy:void 0});const s=h=>{const c=[],u=this._store.copyAll().filter(p=>!h.includes(p.id)||(c.push(p),!1));return{changed:c,unchanged:u}},n=(h,c)=>{this._enabled&&this._eventListeners.finish.forEach(u=>{u(h,c)})},a=(h,c,u)=>{if(!this._enabled)return;this._eventListeners.change.forEach(y=>{y(h,c,u)});const{changed:p,unchanged:g}=s(h);c==="create"?this._adapter.render({created:p,deletedIds:[],unchanged:g,updated:[]},this.getModeStyles()):c==="update"?this._adapter.render({created:[],deletedIds:[],unchanged:g,updated:p},this.getModeStyles()):c==="delete"?this._adapter.render({created:[],deletedIds:h,unchanged:g,updated:[]},this.getModeStyles()):c==="styling"&&this._adapter.render({created:[],deletedIds:[],unchanged:g,updated:[]},this.getModeStyles())},d=h=>{if(!this._enabled)return;this._eventListeners.select.forEach(p=>{p(h)});const{changed:c,unchanged:u}=s([h]);this._adapter.render({created:[],deletedIds:[],unchanged:u,updated:c},this.getModeStyles())},l=h=>{if(!this._enabled)return;this._eventListeners.deselect.forEach(p=>{p()});const{changed:c,unchanged:u}=s([h]);c&&this._adapter.render({created:[],deletedIds:[],unchanged:u,updated:c},this.getModeStyles())};Object.keys(this._modes).forEach(h=>{this._modes[h].register({mode:h,store:this._store,setCursor:this._adapter.setCursor.bind(this._adapter),project:this._adapter.project.bind(this._adapter),unproject:this._adapter.unproject.bind(this._adapter),setDoubleClickToZoom:this._adapter.setDoubleClickToZoom.bind(this._adapter),onChange:a,onSelect:d,onDeselect:l,onFinish:n,coordinatePrecision:this._adapter.getCoordinatePrecision()})})}checkEnabled(){if(!this._enabled)throw new Error("Terra Draw is not enabled")}getModeStyles(){const t={};return Object.keys(this._modes).forEach(e=>{t[e]=i=>this._instanceSelectMode&&i.properties[L.SELECTED]?this._modes[this._instanceSelectMode].styleFeature.bind(this._modes[this._instanceSelectMode])(i):this._modes[e].styleFeature.bind(this._modes[e])(i)}),t}featuresAtLocation({lng:t,lat:e},i){const o=i&&i.pointerDistance!==void 0?i.pointerDistance:30,s=!i||i.ignoreSelectFeatures===void 0||i.ignoreSelectFeatures,n=!(!i||i.ignoreCoordinatePoints===void 0)&&i.ignoreCoordinatePoints,a=!(!i||i.ignoreCurrentlyDrawing===void 0)&&i.ignoreCurrentlyDrawing,d=!(!i||i.ignoreClosingPoints===void 0)&&i.ignoreClosingPoints,l=this._adapter.unproject.bind(this._adapter),h=this._adapter.project.bind(this._adapter),c=h(t,e),u=ye({unproject:l,point:c,pointerDistance:o});return this._store.search(u).filter(p=>{if(s&&(p.properties[L.MID_POINT]||p.properties[L.SELECTION_POINT])||n&&p.properties[Ot]||d&&p.properties[et]||a&&p.properties[N])return!1;if(p.geometry.type==="Point"){const g=p.geometry.coordinates,y=h(g[0],g[1]);return G(c,y)<o}if(p.geometry.type==="LineString"){const g=p.geometry.coordinates;for(let y=0;y<g.length-1;y++){const v=g[y],m=g[y+1];if(Dt(c,h(v[0],v[1]),h(m[0],m[1]))<o)return!0}return!1}if(ve([t,e],p.geometry.coordinates))return!0;if(i!=null&&i.includePolygonsWithinPointerDistance){const g=p.geometry.coordinates;for(const y of g)for(let v=0;v<y.length-1;v++){const m=y[v],C=y[v+1],f=h(m[0],m[1]),P=h(C[0],C[1]);if(Dt(c,f,P)<o)return!0}}return!1})}getSelectMode(){if(this.checkEnabled(),!this._instanceSelectMode)throw new Error("No select mode defined in instance");return this.getMode()!==this._instanceSelectMode&&this.setMode(this._instanceSelectMode),this._modes[this._instanceSelectMode]}setModeStyles(t,e){if(this.checkEnabled(),!this._modes[t])throw new Error("No mode with this name present");this._modes[t].styles=e}updateModeOptions(t,e){if(this.checkEnabled(),!this._modes[t])throw new Error("No mode with this name present");this._modes[t].updateOptions(e)}getSnapshot(){return this._store.copyAll()}getSnapshotFeature(t){if(this._store.has(t))return this._store.copy(t)}clear(){this.checkEnabled(),this._adapter.clear()}get enabled(){return this._enabled}set enabled(t){throw new Error("Enabled is read only")}getMode(){return this._mode.mode}getModeState(){return this._mode.state}setMode(t){if(this.checkEnabled(),!this._modes[t])throw new Error("No mode with this name present");this._mode.stop(),this._mode=this._modes[t],this._mode.start()}removeFeatures(t){this.checkEnabled();const e=[];t.forEach(i=>{if(!this._store.has(i))throw new Error(`No feature with id ${i}, can not delete`);const o=this._store.copy(i);o.properties[L.SELECTED]&&this.deselectFeature(i),o.properties[dt]&&e.push(...o.properties[dt])}),this._store.delete([...t,...e],{origin:"api"})}selectFeature(t){this.getSelectMode().selectFeature(t)}deselectFeature(t){this.getSelectMode().deselectFeature(t)}getFeatureId(){return this._store.getId()}hasFeature(t){return this._store.has(t)}addFeatures(t){return this.checkEnabled(),t.length===0?[]:this._store.load(t,e=>{if(Xt(e)){const i=e.properties.mode,o=this._modes[i];if(!o)return{id:e.id,valid:!1,reason:`${i} mode is not in the list of instantiated modes`};const s=o.validateFeature.bind(o)(e);return{id:e.id,valid:s.valid,reason:s.reason?s.reason:s.valid?void 0:"Feature is invalid"}}return{id:e.id,valid:!1,reason:"Mode property does not exist"}},e=>{if(Xt(e)){const i=this._modes[e.properties.mode];i&&i.afterFeatureAdded&&i.afterFeatureAdded(e)}},{origin:"api"})}start(){this._enabled||(this._enabled=!0,this._adapter.register({onReady:()=>{this._eventListeners.ready.forEach(t=>{t()})},getState:()=>this._mode.state,onClick:t=>{this._mode.onClick(t)},onMouseMove:t=>{this._mode.onMouseMove(t)},onKeyDown:t=>{this._mode.onKeyDown(t)},onKeyUp:t=>{this._mode.onKeyUp(t)},onDragStart:(t,e)=>{this._mode.onDragStart(t,e)},onDrag:(t,e)=>{this._mode.onDrag(t,e)},onDragEnd:(t,e)=>{this._mode.onDragEnd(t,e)},onClear:()=>{this._mode.cleanUp(),this._store.clear()}}))}getFeaturesAtLngLat(t,e){const{lng:i,lat:o}=t;return this.featuresAtLocation({lng:i,lat:o},e)}getFeaturesAtPointerEvent(t,e){const i=this._adapter.getLngLatFromEvent.bind(this._adapter)(t);return i===null?[]:this.featuresAtLocation(i,e)}stop(){this._enabled&&(this._enabled=!1,this._adapter.unregister())}on(t,e){const i=this._eventListeners[t];i.includes(e)||i.push(e)}off(t,e){const i=this._eventListeners[t];i.includes(e)&&i.splice(i.indexOf(e),1)}}var re,bt,ae;function de(r,t=9){const e=Math.pow(10,t);return Math.round(r*e)/e}(bt=re||(re={})).Commit="commit",bt.Provisional="provisional",bt.Finish="finish",function(r){r.Drawing="drawing",r.Select="select",r.Static="static",r.Render="render"}(ae||(ae={}));class J{constructor({name:t,callback:e,unregister:i,register:o}){this.name=void 0,this.callback=void 0,this.registered=!1,this.register=void 0,this.unregister=void 0,this.name=t,this.register=()=>{this.registered||(this.registered=!0,o(e))},this.unregister=()=>{this.register&&(this.registered=!1,i(e))},this.callback=e}}var _i=class{constructor(r){this._minPixelDragDistance=void 0,this._minPixelDragDistanceDrawing=void 0,this._minPixelDragDistanceSelecting=void 0,this._lastDrawEvent=void 0,this._coordinatePrecision=void 0,this._heldKeys=new Set,this._listeners=[],this._dragState="not-dragging",this._currentModeCallbacks=void 0,this._minPixelDragDistance=typeof r.minPixelDragDistance=="number"?r.minPixelDragDistance:1,this._minPixelDragDistanceSelecting=typeof r.minPixelDragDistanceSelecting=="number"?r.minPixelDragDistanceSelecting:1,this._minPixelDragDistanceDrawing=typeof r.minPixelDragDistanceDrawing=="number"?r.minPixelDragDistanceDrawing:8,this._coordinatePrecision=typeof r.coordinatePrecision=="number"?r.coordinatePrecision:9}getButton(r){return r.button===-1?"neither":r.button===0?"left":r.button===1?"middle":r.button===2?"right":"neither"}getMapElementXYPosition(r){const t=this.getMapEventElement(),{left:e,top:i}=t.getBoundingClientRect();return{containerX:r.clientX-e,containerY:r.clientY-i}}getDrawEventFromEvent(r){const t=this.getLngLatFromEvent(r);if(!t)return null;const{lng:e,lat:i}=t,{containerX:o,containerY:s}=this.getMapElementXYPosition(r),n=this.getButton(r),a=Array.from(this._heldKeys);return{lng:de(e,this._coordinatePrecision),lat:de(i,this._coordinatePrecision),containerX:o,containerY:s,button:n,heldKeys:a}}register(r){this._currentModeCallbacks=r,this._listeners=this.getAdapterListeners(),this._listeners.forEach(t=>{t.register()})}getCoordinatePrecision(){return this._coordinatePrecision}getAdapterListeners(){return[new J({name:"pointerdown",callback:r=>{if(!this._currentModeCallbacks||!r.isPrimary)return;const t=this.getDrawEventFromEvent(r);t&&(this._dragState="pre-dragging",this._lastDrawEvent=t)},register:r=>{this.getMapEventElement().addEventListener("pointerdown",r)},unregister:r=>{this.getMapEventElement().removeEventListener("pointerdown",r)}}),new J({name:"pointermove",callback:r=>{if(!this._currentModeCallbacks||!r.isPrimary)return;r.preventDefault();const t=this.getDrawEventFromEvent(r);if(t)if(this._dragState==="not-dragging")this._currentModeCallbacks.onMouseMove(t),this._lastDrawEvent=t;else if(this._dragState==="pre-dragging"){if(!this._lastDrawEvent)return;const e={x:this._lastDrawEvent.containerX,y:this._lastDrawEvent.containerY},i={x:t.containerX,y:t.containerY},o=this._currentModeCallbacks.getState(),s=((a,d)=>{const{x:l,y:h}=a,{x:c,y:u}=d,p=c-l,g=u-h;return Math.sqrt(g*g+p*p)})(e,i);let n=!1;if(n=o==="drawing"?s<this._minPixelDragDistanceDrawing:o==="selecting"?s<this._minPixelDragDistanceSelecting:s<this._minPixelDragDistance,n)return;this._dragState="dragging",this._currentModeCallbacks.onDragStart(t,a=>{this.setDraggability.bind(this)(a)})}else this._dragState==="dragging"&&this._currentModeCallbacks.onDrag(t,e=>{this.setDraggability.bind(this)(e)})},register:r=>{this.getMapEventElement().addEventListener("pointermove",r)},unregister:r=>{this.getMapEventElement().removeEventListener("pointermove",r)}}),new J({name:"contextmenu",callback:r=>{this._currentModeCallbacks&&r.preventDefault()},register:r=>{this.getMapEventElement().addEventListener("contextmenu",r)},unregister:r=>{this.getMapEventElement().removeEventListener("contextmenu",r)}}),new J({name:"pointerup",callback:r=>{if(!this._currentModeCallbacks||r.target!==this.getMapEventElement()||!r.isPrimary)return;const t=this.getDrawEventFromEvent(r);t&&(this._dragState==="dragging"?this._currentModeCallbacks.onDragEnd(t,e=>{this.setDraggability.bind(this)(e)}):this._dragState!=="not-dragging"&&this._dragState!=="pre-dragging"||this._currentModeCallbacks.onClick(t),this._dragState="not-dragging",this.setDraggability(!0))},register:r=>{this.getMapEventElement().addEventListener("pointerup",r)},unregister:r=>{this.getMapEventElement().removeEventListener("pointerup",r)}}),new J({name:"keyup",callback:r=>{this._currentModeCallbacks&&(this._heldKeys.delete(r.key),this._currentModeCallbacks.onKeyUp({key:r.key,heldKeys:Array.from(this._heldKeys),preventDefault:()=>r.preventDefault()}))},register:r=>{this.getMapEventElement().addEventListener("keyup",r)},unregister:r=>{this.getMapEventElement().removeEventListener("keyup",r)}}),new J({name:"keydown",callback:r=>{this._currentModeCallbacks&&(this._heldKeys.add(r.key),this._currentModeCallbacks.onKeyDown({key:r.key,heldKeys:Array.from(this._heldKeys),preventDefault:()=>r.preventDefault()}))},register:r=>{this.getMapEventElement().addEventListener("keydown",r)},unregister:r=>{this.getMapEventElement().removeEventListener("keydown",r)}})]}unregister(){this._listeners.forEach(r=>{r.unregister()}),this.clear()}};class Di extends _i{constructor(t){if(super(t),this._cursor=void 0,this._cursorStyleSheet=void 0,this._lib=void 0,this._map=void 0,this._overlay=void 0,this._clickEventListener=void 0,this._mouseMoveEventListener=void 0,this.renderedFeatureIds=new Set,this._lib=t.lib,this._map=t.map,!this._map.getDiv().id)throw new Error("Google Map container div requires and id to be set");this._coordinatePrecision=typeof t.coordinatePrecision=="number"?t.coordinatePrecision:9}get _layers(){var t;return((t=this.renderedFeatureIds)==null?void 0:t.size)>0}circlePath(t,e,i){const o=2*i;return`M ${t} ${e} m -${i}, 0 a ${i},${i} 0 1,0 ${o},0 a ${i},${i} 0 1,0 -${o},0`}register(t){super.register(t),this._overlay=new this._lib.OverlayView,this._overlay.draw=function(){},this._overlay.onAdd=()=>{var e;(e=this._currentModeCallbacks)!=null&&e.onReady&&this._currentModeCallbacks.onReady()},this._overlay.setMap(this._map),this._clickEventListener=this._map.data.addListener("click",e=>{const i=this._listeners.find(({name:o})=>o==="click");i&&i.callback(e)}),this._mouseMoveEventListener=this._map.data.addListener("mousemove",e=>{const i=this._listeners.find(({name:o})=>o==="mousemove");i&&i.callback(e)})}unregister(){var t,e,i;super.unregister(),(t=this._clickEventListener)==null||t.remove(),(e=this._mouseMoveEventListener)==null||e.remove(),(i=this._overlay)==null||i.setMap(null),this._overlay=void 0}getLngLatFromEvent(t){if(!this._overlay)throw new Error("cannot get overlay");const e=this._map.getBounds();if(!e)return null;const i=e.getNorthEast(),o=e.getSouthWest(),s=new this._lib.LatLngBounds(o,i),n=this._map.getDiv(),a=t.clientX-n.getBoundingClientRect().left,d=t.clientY-n.getBoundingClientRect().top,l=new this._lib.Point(a,d),h=this._overlay.getProjection();if(!h)return null;const c=h.fromContainerPixelToLatLng(l);return c&&s.contains(c)?{lng:c.lng(),lat:c.lat()}:null}getMapEventElement(){return this._map.getDiv().querySelector('div[style*="z-index: 3;"]')}project(t,e){if(!this._overlay)throw new Error("cannot get overlay");if(this._map.getBounds()===void 0)throw new Error("cannot get bounds");const i=this._overlay.getProjection();if(i===void 0)throw new Error("cannot get projection");const o=i.fromLatLngToContainerPixel(new this._lib.LatLng(e,t));if(o===null)throw new Error("cannot project coordinates");return{x:o.x,y:o.y}}unproject(t,e){if(!this._overlay)throw new Error("cannot get overlay");const i=this._overlay.getProjection();if(i===void 0)throw new Error("cannot get projection");const o=i.fromContainerPixelToLatLng(new this._lib.Point(t,e));if(o===null)throw new Error("cannot unproject coordinates");return{lng:o.lng(),lat:o.lat()}}setCursor(t){if(t!==this._cursor){if(this._cursorStyleSheet&&(this._cursorStyleSheet.remove(),this._cursorStyleSheet=void 0),t!=="unset"){const e=this._map.getDiv(),i=document.querySelector(`#${e.id} .gm-style > div`);if(i){i.classList.add("terra-draw-google-maps");const o=document.createElement("style");o.innerHTML=`.terra-draw-google-maps { cursor: ${t} !important; }`,document.getElementsByTagName("head")[0].appendChild(o),this._cursorStyleSheet=o}}this._cursor=t}}setDoubleClickToZoom(t){this._map.setOptions(t?{disableDoubleClickZoom:!1}:{disableDoubleClickZoom:!0})}setDraggability(t){this._map.setOptions({draggable:t})}render(t,e){this._layers&&(t.deletedIds.forEach(o=>{const s=this._map.data.getFeatureById(o);s&&(this._map.data.remove(s),this.renderedFeatureIds.delete(o))}),t.updated.forEach(o=>{if(!o||!o.id)throw new Error("Feature is not valid");const s=this._map.data.getFeatureById(o.id);if(!s)throw new Error("Feature could not be found by Google Maps API");switch(s.forEachProperty((n,a)=>{s.setProperty(a,void 0)}),Object.keys(o.properties).forEach(n=>{s.setProperty(n,o.properties[n])}),o.geometry.type){case"Point":{const n=o.geometry.coordinates;s.setGeometry(new this._lib.Data.Point(new this._lib.LatLng(n[1],n[0])))}break;case"LineString":{const n=o.geometry.coordinates,a=[];for(let d=0;d<n.length;d++){const l=n[d],h=new this._lib.LatLng(l[1],l[0]);a.push(h)}s.setGeometry(new this._lib.Data.LineString(a))}break;case"Polygon":{const n=o.geometry.coordinates,a=[];for(let d=0;d<n.length;d++){const l=[];for(let h=0;h<n[d].length;h++){const c=new this._lib.LatLng(n[d][h][1],n[d][h][0]);l.push(c)}a.push(l)}s.setGeometry(new this._lib.Data.Polygon(a))}}}),t.created.forEach(o=>{this.renderedFeatureIds.add(o.id),this._map.data.addGeoJson(o)})),t.created.forEach(o=>{this.renderedFeatureIds.add(o.id)});const i={type:"FeatureCollection",features:[...t.created]};this._map.data.addGeoJson(i),this._map.data.setStyle(o=>{const s=o.getProperty("mode"),n=o.getGeometry();if(!n)throw new Error("Google Maps geometry not found");const a=n.getType(),d={};o.forEachProperty((h,c)=>{d[c]=h});const l=e[s]({type:"Feature",geometry:{type:a,coordinates:[]},properties:d});switch(a){case"Point":return{clickable:!1,icon:{path:this.circlePath(0,0,l.pointWidth),fillColor:l.pointColor,fillOpacity:1,strokeColor:l.pointOutlineColor,strokeWeight:l.pointOutlineWidth,rotation:0,scale:1}};case"LineString":return{strokeColor:l.lineStringColor,strokeWeight:l.lineStringWidth};case"Polygon":return{strokeColor:l.polygonOutlineColor,strokeWeight:l.polygonOutlineWidth,fillOpacity:l.polygonFillOpacity,fillColor:l.polygonFillColor}}throw Error("Unknown feature type")})}clearLayers(){this._layers&&(this._map.data.forEach(t=>{const e=t.getId();this.renderedFeatureIds.has(e)&&this._map.data.remove(t)}),this.renderedFeatureIds=new Set)}clear(){this._currentModeCallbacks&&(this._currentModeCallbacks.onClear(),this.clearLayers())}getCoordinatePrecision(){return super.getCoordinatePrecision()}}/*
 * @license
 * Copyright 2025 Google LLC. All Rights Reserved.
 * SPDX-License-Identifier: Apache-2.0
 */const le=["#E74C3C","#FF0066","#9B59B6","#673AB7","#3F51B5","#3498DB","#03A9F4","#00BCD4","#009688","#27AE60","#8BC34A","#CDDC39","#F1C40F","#FFC107","#F39C12","#FF5722","#795548"],Z=()=>le[Math.floor(Math.random()*le.length)];function he(r){return r.map(t=>{const e=JSON.parse(JSON.stringify(t));return e.properties.mode==="rectangle"?(e.geometry.type="Polygon",e.properties.mode="polygon"):e.properties.mode==="circle"&&(e.geometry.type="Polygon",e.properties.mode="circle"),e})}function ki(){if(!document.getElementById("mode-ui"))return;const t={"select-mode":"select","point-mode":"point","linestring-mode":"linestring","polygon-mode":"polygon","rectangle-mode":"rectangle","circle-mode":"circle","freehand-mode":"freehand","clear-mode":"static"};for(const e in t){const i=document.getElementById(e);i&&(i.onclick=()=>{Nt(e);const o=t[e];E&&(o==="static"?(E.clear(),E.setMode("static")):o&&E.setMode(o))})}}function Nt(r){const t=document.querySelectorAll(".mode-button"),e=document.getElementById("resize-button"),i=e==null?void 0:e.classList.contains("active");t.forEach(s=>{s.id!=="resize-button"&&s.classList.remove("active")});const o=document.getElementById(r);o&&o.classList.add("active"),i&&(e==null||e.classList.add("active"))}function Oi(){Nt("point-mode")}let yt,E,Bi="static",$=[],ft=[],A=null,nt=!1,j=!1,wt;const ji=new H({apiKey:"AIzaSyA6myHzS10YXdcazAFalmXvDkrYCp5cLc8",version:"weekly",libraries:["maps","drawing","marker"]});ji.load().then(async()=>{try{const{Map:r}=await google.maps.importLibrary("maps"),{LatLngBounds:t}=await google.maps.importLibrary("core"),{Data:e}=await google.maps.importLibrary("maps"),i={center:{lat:48.862,lng:2.342},zoom:12,mapId:"c306b3c6dd3ed8d9",mapTypeId:"roadmap",zoomControl:!1,tilt:45,mapTypeControl:!0,clickableIcons:!1,streetViewControl:!1,fullscreenControl:!1},o=document.getElementById("map");yt=new r(o,i),yt.addListener("click",()=>{E&&console.log("Current draw mode on map click:",E.getMode())}),yt.addListener("projection_changed",()=>{E=new Fi({adapter:new Di({map:yt,lib:google.maps,coordinatePrecision:9}),modes:[new Ci({flags:{polygon:{feature:{draggable:!0,rotateable:!0,coordinates:{midpoints:!0,draggable:!0,deletable:!0}}},linestring:{feature:{draggable:!0,rotateable:!0,coordinates:{midpoints:!0,draggable:!0,deletable:!0}}},point:{feature:{draggable:!0,rotateable:!0}},rectangle:{feature:{draggable:!0,rotateable:!0,coordinates:{midpoints:!0,draggable:!0,deletable:!0}}},circle:{feature:{draggable:!0,rotateable:!0,coordinates:{midpoints:!0,draggable:!0,deletable:!0}}},freehand:{feature:{draggable:!0,rotateable:!0,coordinates:{midpoints:!0,draggable:!0,deletable:!0}}}}}),new ti({editable:!0,styles:{pointColor:Z()}}),new $e({editable:!0,styles:{lineStringColor:Z()}}),new si({editable:!0,styles:(()=>{const a=Z();return{fillColor:a,outlineColor:a}})()}),new ai({styles:(()=>{const a=Z();return{fillColor:a,outlineColor:a}})()}),new We({styles:(()=>{const a=Z();return{fillColor:a,outlineColor:a}})()}),new Te({styles:(()=>{const a=Z();return{fillColor:a,outlineColor:a}})()})]}),E.start(),E.on("ready",()=>{console.log("TerraDraw is ready!"),Oi(),ki(),E.setMode("point"),Bi="point",Nt("point-mode"),E.on("select",g=>{A&&A!==g&&E.deselectFeature(A),A=g}),E.on("deselect",()=>{A=null}),$.push(he(E.getSnapshot())),E.on("change",(g,y)=>{nt||(wt&&clearTimeout(wt),wt=window.setTimeout(()=>{const v=E.getSnapshot(),C=he(v).filter(f=>!f.properties.midPoint&&!f.properties.selectionPoint);$.push(C),ft=[]},200))});const a=document.getElementById("export-button");a&&(a.onclick=()=>{const y={type:"FeatureCollection",features:E.getSnapshot()},v=JSON.stringify(y,null,2),m=new Blob([v],{type:"text/plain"}),C=URL.createObjectURL(m),f=document.createElement("a");f.href=C,f.download="drawing.geojson",f.click(),URL.revokeObjectURL(C)});const d=document.getElementById("upload-button"),l=document.getElementById("upload-input");d&&l&&(d.onclick=()=>{l.click()},l.onchange=g=>{var v;const y=(v=g.target.files)==null?void 0:v[0];if(y){const m=new FileReader;m.onload=C=>{var f;try{const P=JSON.parse((f=C.target)==null?void 0:f.result);P.type==="FeatureCollection"?E.addFeatures(P.features):alert("Invalid GeoJSON file: must be a FeatureCollection.")}catch{alert("Error parsing GeoJSON file.")}},m.readAsText(y)}});const h=document.getElementById("resize-button");h&&(h.onclick=()=>{j=!j,h.classList.toggle("active",j);const g={polygon:{feature:{draggable:!0,coordinates:{resizable:j?"center":void 0,draggable:!j}}},linestring:{feature:{draggable:!0,coordinates:{resizable:j?"center":void 0,draggable:!j}}},rectangle:{feature:{draggable:!0,coordinates:{resizable:j?"center":void 0,draggable:!j}}},circle:{feature:{draggable:!0,coordinates:{resizable:j?"center":void 0,draggable:!j}}},freehand:{feature:{draggable:!0,coordinates:{resizable:j?"center":void 0,draggable:!j}}}};console.log("Updating flags:",g),E.updateModeOptions("select",{flags:g})});const c=document.getElementById("delete-selected-button");c&&(c.onclick=()=>{if(A)E.removeFeatures([A]);else{const g=E.getSnapshot();if(g.length>0){const y=g[g.length-1];y.id&&E.removeFeatures([y.id])}}});const u=document.getElementById("undo-button");u&&(u.onclick=()=>{if($.length>1){ft.push($.pop());const g=$[$.length-1];console.log("Restoring snapshot (undo):",g),nt=!0,E.clear(),E.addFeatures(g),setTimeout(()=>{nt=!1},0)}});const p=document.getElementById("redo-button");p&&(p.onclick=()=>{if(ft.length>0){const g=ft.pop();console.log("Restoring snapshot (redo):",g),$.push(g),nt=!0,E.clear(),E.addFeatures(g),setTimeout(()=>{nt=!1},0)}})});function s(a,d){const l=JSON.parse(JSON.stringify(a)),h=l.geometry.coordinates,c=n(h),u=h.map(p=>p.map(g=>{const y=g[0]-c[0],v=g[1]-c[1],m=y*Math.cos(d*Math.PI/180)-v*Math.sin(d*Math.PI/180),C=y*Math.sin(d*Math.PI/180)+v*Math.cos(d*Math.PI/180);return[m+c[0],C+c[1]]}));return l.geometry.coordinates=u,l}function n(a){let d=0,l=0,h=0;return a.forEach(c=>{c.forEach(u=>{d+=u[0],l+=u[1],h++})}),[d/h,l/h]}document.addEventListener("keydown",a=>{if(a.key==="r"&&A){const l=E.getSnapshot().find(h=>h.id===A);if(l){const h=s(l,15);E.addFeatures([h])}}})})}catch(r){console.error("Error loading Google Maps API:",r)}}).catch(r=>{console.error("Error loading Google Maps API:",r)});
