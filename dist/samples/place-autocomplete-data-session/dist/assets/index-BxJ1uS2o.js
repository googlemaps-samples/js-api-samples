(function(){const i=document.createElement("link").relList;if(i&&i.supports&&i.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))a(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const o of t.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&a(o)}).observe(document,{childList:!0,subtree:!0});function l(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function a(e){if(e.ep)return;e.ep=!0;const t=l(e);fetch(e.href,t)}})();/**
 * @license
 * Copyright 2025 Google LLC. All Rights Reserved.
 * SPDX-License-Identifier: Apache-2.0
 */const y=document.querySelector("gmp-map");let r,u,d=document.querySelector(".title"),c=document.querySelector(".results"),g=document.querySelector("input"),h=document.querySelector(".token-status"),p=0,f=0;const s={input:"",includedPrimaryTypes:["restaurant","cafe","museum","park","botanical_garden"]};async function C(){await google.maps.importLibrary("maps"),r=y.innerMap,r.setOptions({mapTypeControl:!1}),google.maps.event.addListener(r,"bounds_changed",async()=>{s.locationRestriction=r.getBounds(),s.origin=r.getCenter()}),g.addEventListener("input",S)}async function S(n){const i=++p,{AutocompleteSuggestion:l}=await google.maps.importLibrary("places");if(!n.target?.value){d.textContent="",c.replaceChildren();return}s.input=n.target.value;const{suggestions:a}=await l.fetchAutocompleteSuggestions(s);if(i===p){d.innerText=`Place predictions for "${s.input}"`,c.replaceChildren();for(const e of a){const t=e.placePrediction;if(!t)continue;const o=document.createElement("button");o.addEventListener("click",()=>{L(t.toPlace())}),o.textContent=t.text.toString(),o.classList.add("place-button");const m=document.createElement("li");m.appendChild(o),c.appendChild(m)}}}async function L(n){const{AdvancedMarkerElement:i}=await google.maps.importLibrary("marker");await n.fetchFields({fields:["displayName","formattedAddress","location"]}),c.textContent=`${n.displayName}: ${n.formattedAddress}`,d.textContent="Selected Place:",g.value="",await b(),u&&u.remove(),u=new i({map:r,position:n.location,title:n.displayName}),n.location&&(r.setCenter(n.location),r.setZoom(15))}async function b(){const{AutocompleteSessionToken:n}=await google.maps.importLibrary("places");f++,s.sessionToken=new n,h.textContent=`Session token count: ${f}`}C();
